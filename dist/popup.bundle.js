(()=>{"use strict";var e={699:(e,t,n)=>{n.d(t,{Z:()=>_});var o=n(537),r=n.n(o),i=n(645),l=n.n(i)()(r());l.push([e.id,"#popup {\r\n  width: 400px;\r\n  height: 300px;\r\n}\r\n\r\n#popup > * {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.btn {\r\n  width: 100%;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n","",{version:3,sources:["webpack://./src/popup/popup.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;AACf",sourcesContent:["#popup {\r\n  width: 400px;\r\n  height: 300px;\r\n}\r\n\r\n#popup > * {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.btn {\r\n  width: 100%;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n"],sourceRoot:""}]);const _=l},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(o)for(var _=0;_<this.length;_++){var u=this[_][0];null!=u&&(l[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);o&&l[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),l=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(l).concat([i]).join("\n")}return[t].join("\n")}},400:(e,t,n)=>{n.r(t),n.d(t,{Component:()=>b,Fragment:()=>g,cloneElement:()=>B,createContext:()=>W,createElement:()=>v,createRef:()=>y,h:()=>v,hydrate:()=>N,isValidElement:()=>l,options:()=>r,render:()=>L,toChildArray:()=>O});var o,r,i,l,_,u,c,s,a={},f=[],p=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function d(e,t){for(var n in t)e[n]=t[n];return e}function h(e){var t=e.parentNode;t&&t.removeChild(e)}function v(e,t,n){var r,i,l,_={};for(l in t)"key"==l?r=t[l]:"ref"==l?i=t[l]:_[l]=t[l];if(arguments.length>2&&(_.children=arguments.length>3?o.call(arguments,2):n),"function"==typeof e&&null!=e.defaultProps)for(l in e.defaultProps)void 0===_[l]&&(_[l]=e.defaultProps[l]);return m(e,_,r,i,null)}function m(e,t,n,o,l){var _={type:e,props:t,key:n,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==l?++i:l};return null==l&&null!=r.vnode&&r.vnode(_),_}function y(){return{current:null}}function g(e){return e.children}function b(e,t){this.props=e,this.context=t}function x(e,t){if(null==t)return e.__?x(e.__,e.__.__k.indexOf(e)+1):null;for(var n;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e)return n.__e;return"function"==typeof e.type?x(e):null}function k(e){var t,n;if(null!=(e=e.__)&&null!=e.__c){for(e.__e=e.__c.base=null,t=0;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e){e.__e=e.__c.base=n.__e;break}return k(e)}}function A(e){(!e.__d&&(e.__d=!0)&&_.push(e)&&!C.__r++||c!==r.debounceRendering)&&((c=r.debounceRendering)||u)(C)}function C(){for(var e;C.__r=_.length;)e=_.sort((function(e,t){return e.__v.__b-t.__v.__b})),_=[],e.some((function(e){var t,n,o,r,i,l;e.__d&&(i=(r=(t=e).__v).__e,(l=t.__P)&&(n=[],(o=d({},r)).__v=r.__v+1,M(l,r,o,t.__n,void 0!==l.ownerSVGElement,null!=r.__h?[i]:null,n,null==i?x(r):i,r.__h),D(n,r),r.__e!=i&&k(r)))}))}function j(e,t,n,o,r,i,l,_,u,c){var s,p,d,h,v,y,b,k=o&&o.__k||f,A=k.length;for(n.__k=[],s=0;s<t.length;s++)if(null!=(h=n.__k[s]=null==(h=t[s])||"boolean"==typeof h?null:"string"==typeof h||"number"==typeof h||"bigint"==typeof h?m(null,h,null,null,h):Array.isArray(h)?m(g,{children:h},null,null,null):h.__b>0?m(h.type,h.props,h.key,null,h.__v):h)){if(h.__=n,h.__b=n.__b+1,null===(d=k[s])||d&&h.key==d.key&&h.type===d.type)k[s]=void 0;else for(p=0;p<A;p++){if((d=k[p])&&h.key==d.key&&h.type===d.type){k[p]=void 0;break}d=null}M(e,h,d=d||a,r,i,l,_,u,c),v=h.__e,(p=h.ref)&&d.ref!=p&&(b||(b=[]),d.ref&&b.push(d.ref,null,h),b.push(p,h.__c||v,h)),null!=v?(null==y&&(y=v),"function"==typeof h.type&&h.__k===d.__k?h.__d=u=E(h,u,e):u=S(e,h,d,k,v,u),"function"==typeof n.type&&(n.__d=u)):u&&d.__e==u&&u.parentNode!=e&&(u=x(d))}for(n.__e=y,s=A;s--;)null!=k[s]&&("function"==typeof n.type&&null!=k[s].__e&&k[s].__e==n.__d&&(n.__d=x(o,s+1)),U(k[s],k[s]));if(b)for(s=0;s<b.length;s++)I(b[s],b[++s],b[++s])}function E(e,t,n){for(var o,r=e.__k,i=0;r&&i<r.length;i++)(o=r[i])&&(o.__=e,t="function"==typeof o.type?E(o,t,n):S(n,o,o,r,o.__e,t));return t}function O(e,t){return t=t||[],null==e||"boolean"==typeof e||(Array.isArray(e)?e.some((function(e){O(e,t)})):t.push(e)),t}function S(e,t,n,o,r,i){var l,_,u;if(void 0!==t.__d)l=t.__d,t.__d=void 0;else if(null==n||r!=i||null==r.parentNode)e:if(null==i||i.parentNode!==e)e.appendChild(r),l=null;else{for(_=i,u=0;(_=_.nextSibling)&&u<o.length;u+=2)if(_==r)break e;e.insertBefore(r,i),l=i}return void 0!==l?l:r.nextSibling}function w(e,t,n){"-"===t[0]?e.setProperty(t,n):e[t]=null==n?"":"number"!=typeof n||p.test(t)?n:n+"px"}function T(e,t,n,o,r){var i;e:if("style"===t)if("string"==typeof n)e.style.cssText=n;else{if("string"==typeof o&&(e.style.cssText=o=""),o)for(t in o)n&&t in n||w(e.style,t,"");if(n)for(t in n)o&&n[t]===o[t]||w(e.style,t,n[t])}else if("o"===t[0]&&"n"===t[1])i=t!==(t=t.replace(/Capture$/,"")),t=t.toLowerCase()in e?t.toLowerCase().slice(2):t.slice(2),e.l||(e.l={}),e.l[t+i]=n,n?o||e.addEventListener(t,i?H:P,i):e.removeEventListener(t,i?H:P,i);else if("dangerouslySetInnerHTML"!==t){if(r)t=t.replace(/xlink[H:h]/,"h").replace(/sName$/,"s");else if("href"!==t&&"list"!==t&&"form"!==t&&"tabIndex"!==t&&"download"!==t&&t in e)try{e[t]=null==n?"":n;break e}catch(e){}"function"==typeof n||(null!=n&&(!1!==n||"a"===t[0]&&"r"===t[1])?e.setAttribute(t,n):e.removeAttribute(t))}}function P(e){this.l[e.type+!1](r.event?r.event(e):e)}function H(e){this.l[e.type+!0](r.event?r.event(e):e)}function M(e,t,n,o,i,l,_,u,c){var s,a,f,p,h,v,m,y,x,k,A,C=t.type;if(void 0!==t.constructor)return null;null!=n.__h&&(c=n.__h,u=t.__e=n.__e,t.__h=null,l=[u]),(s=r.__b)&&s(t);try{e:if("function"==typeof C){if(y=t.props,x=(s=C.contextType)&&o[s.__c],k=s?x?x.props.value:s.__:o,n.__c?m=(a=t.__c=n.__c).__=a.__E:("prototype"in C&&C.prototype.render?t.__c=a=new C(y,k):(t.__c=a=new b(y,k),a.constructor=C,a.render=R),x&&x.sub(a),a.props=y,a.state||(a.state={}),a.context=k,a.__n=o,f=a.__d=!0,a.__h=[]),null==a.__s&&(a.__s=a.state),null!=C.getDerivedStateFromProps&&(a.__s==a.state&&(a.__s=d({},a.__s)),d(a.__s,C.getDerivedStateFromProps(y,a.__s))),p=a.props,h=a.state,f)null==C.getDerivedStateFromProps&&null!=a.componentWillMount&&a.componentWillMount(),null!=a.componentDidMount&&a.__h.push(a.componentDidMount);else{if(null==C.getDerivedStateFromProps&&y!==p&&null!=a.componentWillReceiveProps&&a.componentWillReceiveProps(y,k),!a.__e&&null!=a.shouldComponentUpdate&&!1===a.shouldComponentUpdate(y,a.__s,k)||t.__v===n.__v){a.props=y,a.state=a.__s,t.__v!==n.__v&&(a.__d=!1),a.__v=t,t.__e=n.__e,t.__k=n.__k,t.__k.forEach((function(e){e&&(e.__=t)})),a.__h.length&&_.push(a);break e}null!=a.componentWillUpdate&&a.componentWillUpdate(y,a.__s,k),null!=a.componentDidUpdate&&a.__h.push((function(){a.componentDidUpdate(p,h,v)}))}a.context=k,a.props=y,a.state=a.__s,(s=r.__r)&&s(t),a.__d=!1,a.__v=t,a.__P=e,s=a.render(a.props,a.state,a.context),a.state=a.__s,null!=a.getChildContext&&(o=d(d({},o),a.getChildContext())),f||null==a.getSnapshotBeforeUpdate||(v=a.getSnapshotBeforeUpdate(p,h)),A=null!=s&&s.type===g&&null==s.key?s.props.children:s,j(e,Array.isArray(A)?A:[A],t,n,o,i,l,_,u,c),a.base=t.__e,t.__h=null,a.__h.length&&_.push(a),m&&(a.__E=a.__=null),a.__e=!1}else null==l&&t.__v===n.__v?(t.__k=n.__k,t.__e=n.__e):t.__e=F(n.__e,t,n,o,i,l,_,c);(s=r.diffed)&&s(t)}catch(e){t.__v=null,(c||null!=l)&&(t.__e=u,t.__h=!!c,l[l.indexOf(u)]=null),r.__e(e,t,n)}}function D(e,t){r.__c&&r.__c(t,e),e.some((function(t){try{e=t.__h,t.__h=[],e.some((function(e){e.call(t)}))}catch(e){r.__e(e,t.__v)}}))}function F(e,t,n,r,i,l,_,u){var c,s,f,p=n.props,d=t.props,v=t.type,m=0;if("svg"===v&&(i=!0),null!=l)for(;m<l.length;m++)if((c=l[m])&&"setAttribute"in c==!!v&&(v?c.localName===v:3===c.nodeType)){e=c,l[m]=null;break}if(null==e){if(null===v)return document.createTextNode(d);e=i?document.createElementNS("http://www.w3.org/2000/svg",v):document.createElement(v,d.is&&d),l=null,u=!1}if(null===v)p===d||u&&e.data===d||(e.data=d);else{if(l=l&&o.call(e.childNodes),s=(p=n.props||a).dangerouslySetInnerHTML,f=d.dangerouslySetInnerHTML,!u){if(null!=l)for(p={},m=0;m<e.attributes.length;m++)p[e.attributes[m].name]=e.attributes[m].value;(f||s)&&(f&&(s&&f.__html==s.__html||f.__html===e.innerHTML)||(e.innerHTML=f&&f.__html||""))}if(function(e,t,n,o,r){var i;for(i in n)"children"===i||"key"===i||i in t||T(e,i,null,n[i],o);for(i in t)r&&"function"!=typeof t[i]||"children"===i||"key"===i||"value"===i||"checked"===i||n[i]===t[i]||T(e,i,t[i],n[i],o)}(e,d,p,i,u),f)t.__k=[];else if(m=t.props.children,j(e,Array.isArray(m)?m:[m],t,n,r,i&&"foreignObject"!==v,l,_,l?l[0]:n.__k&&x(n,0),u),null!=l)for(m=l.length;m--;)null!=l[m]&&h(l[m]);u||("value"in d&&void 0!==(m=d.value)&&(m!==e.value||"progress"===v&&!m||"option"===v&&m!==p.value)&&T(e,"value",m,p.value,!1),"checked"in d&&void 0!==(m=d.checked)&&m!==e.checked&&T(e,"checked",m,p.checked,!1))}return e}function I(e,t,n){try{"function"==typeof e?e(t):e.current=t}catch(e){r.__e(e,n)}}function U(e,t,n){var o,i;if(r.unmount&&r.unmount(e),(o=e.ref)&&(o.current&&o.current!==e.__e||I(o,null,t)),null!=(o=e.__c)){if(o.componentWillUnmount)try{o.componentWillUnmount()}catch(e){r.__e(e,t)}o.base=o.__P=null}if(o=e.__k)for(i=0;i<o.length;i++)o[i]&&U(o[i],t,"function"!=typeof e.type);n||null==e.__e||h(e.__e),e.__e=e.__d=void 0}function R(e,t,n){return this.constructor(e,n)}function L(e,t,n){var i,l,_;r.__&&r.__(e,t),l=(i="function"==typeof n)?null:n&&n.__k||t.__k,_=[],M(t,e=(!i&&n||t).__k=v(g,null,[e]),l||a,a,void 0!==t.ownerSVGElement,!i&&n?[n]:l?null:t.firstChild?o.call(t.childNodes):null,_,!i&&n?n:l?l.__e:t.firstChild,i),D(_,e)}function N(e,t){L(e,t,N)}function B(e,t,n){var r,i,l,_=d({},e.props);for(l in t)"key"==l?r=t[l]:"ref"==l?i=t[l]:_[l]=t[l];return arguments.length>2&&(_.children=arguments.length>3?o.call(arguments,2):n),m(e.type,_,r||e.key,i||e.ref,null)}function W(e,t){var n={__c:t="__cC"+s++,__:e,Consumer:function(e,t){return e.children(t)},Provider:function(e){var n,o;return this.getChildContext||(n=[],(o={})[t]=this,this.getChildContext=function(){return o},this.shouldComponentUpdate=function(e){this.props.value!==e.value&&n.some(A)},this.sub=function(e){n.push(e);var t=e.componentWillUnmount;e.componentWillUnmount=function(){n.splice(n.indexOf(e),1),t&&t.call(e)}}),e.children}};return n.Provider.__=n.Consumer.contextType=n}o=f.slice,r={__e:function(e,t){for(var n,o,r;t=t.__;)if((n=t.__c)&&!n.__)try{if((o=n.constructor)&&null!=o.getDerivedStateFromError&&(n.setState(o.getDerivedStateFromError(e)),r=n.__d),null!=n.componentDidCatch&&(n.componentDidCatch(e),r=n.__d),r)return n.__E=n}catch(t){e=t}throw e}},i=0,l=function(e){return null!=e&&void 0===e.constructor},b.prototype.setState=function(e,t){var n;n=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=d({},this.state),"function"==typeof e&&(e=e(d({},n),this.props)),e&&d(n,e),null!=e&&this.__v&&(t&&this.__h.push(t),A(this))},b.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),A(this))},b.prototype.render=g,_=[],u="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,C.__r=0,s=0},396:(e,t,n)=>{n.r(t),n.d(t,{useCallback:()=>k,useContext:()=>A,useDebugValue:()=>C,useEffect:()=>m,useErrorBoundary:()=>j,useImperativeHandle:()=>b,useLayoutEffect:()=>y,useMemo:()=>x,useReducer:()=>v,useRef:()=>g,useState:()=>h});var o,r,i,l=n(400),_=0,u=[],c=l.options.__b,s=l.options.__r,a=l.options.diffed,f=l.options.__c,p=l.options.unmount;function d(e,t){l.options.__h&&l.options.__h(r,e,_||t),_=0;var n=r.__H||(r.__H={__:[],__h:[]});return e>=n.__.length&&n.__.push({}),n.__[e]}function h(e){return _=1,v(P,e)}function v(e,t,n){var i=d(o++,2);return i.t=e,i.__c||(i.__=[n?n(t):P(void 0,t),function(e){var t=i.t(i.__[0],e);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}],i.__c=r),i.__}function m(e,t){var n=d(o++,3);!l.options.__s&&T(n.__H,t)&&(n.__=e,n.__H=t,r.__H.__h.push(n))}function y(e,t){var n=d(o++,4);!l.options.__s&&T(n.__H,t)&&(n.__=e,n.__H=t,r.__h.push(n))}function g(e){return _=5,x((function(){return{current:e}}),[])}function b(e,t,n){_=6,y((function(){"function"==typeof e?e(t()):e&&(e.current=t())}),null==n?n:n.concat(e))}function x(e,t){var n=d(o++,7);return T(n.__H,t)&&(n.__=e(),n.__H=t,n.__h=e),n.__}function k(e,t){return _=8,x((function(){return e}),t)}function A(e){var t=r.context[e.__c],n=d(o++,9);return n.c=e,t?(null==n.__&&(n.__=!0,t.sub(r)),t.props.value):e.__}function C(e,t){l.options.useDebugValue&&l.options.useDebugValue(t?t(e):e)}function j(e){var t=d(o++,10),n=h();return t.__=e,r.componentDidCatch||(r.componentDidCatch=function(e){t.__&&t.__(e),n[1](e)}),[n[0],function(){n[1](void 0)}]}function E(){for(var e;e=u.shift();)if(e.__P)try{e.__H.__h.forEach(S),e.__H.__h.forEach(w),e.__H.__h=[]}catch(t){e.__H.__h=[],l.options.__e(t,e.__v)}}l.options.__b=function(e){r=null,c&&c(e)},l.options.__r=function(e){s&&s(e),o=0;var t=(r=e.__c).__H;t&&(t.__h.forEach(S),t.__h.forEach(w),t.__h=[])},l.options.diffed=function(e){a&&a(e);var t=e.__c;t&&t.__H&&t.__H.__h.length&&(1!==u.push(t)&&i===l.options.requestAnimationFrame||((i=l.options.requestAnimationFrame)||function(e){var t,n=function(){clearTimeout(o),O&&cancelAnimationFrame(t),setTimeout(e)},o=setTimeout(n,100);O&&(t=requestAnimationFrame(n))})(E)),r=null},l.options.__c=function(e,t){t.some((function(e){try{e.__h.forEach(S),e.__h=e.__h.filter((function(e){return!e.__||w(e)}))}catch(n){t.some((function(e){e.__h&&(e.__h=[])})),t=[],l.options.__e(n,e.__v)}})),f&&f(e,t)},l.options.unmount=function(e){p&&p(e);var t,n=e.__c;n&&n.__H&&(n.__H.__.forEach((function(e){try{S(e)}catch(e){t=e}})),t&&l.options.__e(t,n.__v))};var O="function"==typeof requestAnimationFrame;function S(e){var t=r,n=e.__c;"function"==typeof n&&(e.__c=void 0,n()),r=t}function w(e){var t=r;e.__c=e.__(),r=t}function T(e,t){return!e||e.length!==t.length||t.some((function(t,n){return t!==e[n]}))}function P(e,t){return"function"==typeof t?t(e):t}},584:(e,t,n)=>{n.r(t),n.d(t,{Fragment:()=>o.Fragment,jsx:()=>i,jsxDEV:()=>i,jsxs:()=>i});var o=n(400),r=0;function i(e,t,n,i,l){var _,u,c={};for(u in t)"ref"==u?_=t[u]:c[u]=t[u];var s={type:e,props:c,key:n,ref:_,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--r,__source:i,__self:l};if("function"==typeof e&&(_=e.defaultProps))for(u in _)void 0===c[u]&&(c[u]=_[u]);return o.options.vnode&&o.options.vnode(s),s}},823:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var o=n(379),r=n.n(o),i=n(795),l=n.n(i),_=n(569),u=n.n(_),c=n(565),s=n.n(c),a=n(216),f=n.n(a),p=n(589),d=n.n(p),h=n(699),v={};v.styleTagTransform=d(),v.setAttributes=s(),v.insert=u().bind(null,"head"),v.domAPI=l(),v.insertStyleElement=f(),r()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},l=[],_=0;_<e.length;_++){var u=e[_],c=o.base?u[0]+o.base:u[0],s=i[c]||0,a="".concat(c," ").concat(s);i[c]=s+1;var f=n(a),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var d=r(p,o);o.byIndex=_,t.splice(_,0,{identifier:a,updater:d,references:1})}l.push(a)}return l}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var l=0;l<i.length;l++){var _=n(i[l]);t[_].references--}for(var u=o(e,r),c=0;c<i.length;c++){var s=n(i[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=u}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},828:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.setData=t.getData=void 0,t.getData=function(e){return browser.storage.local.get(e)},t.setData=function(e){return browser.storage.local.set(e)}},901:function(e,t,n){var o=this&&this.__rest||function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]])}return n};Object.defineProperty(t,"__esModule",{value:!0}),t.ToggleSwitch=t.TextInput=t.Button=t.Alert=void 0;const r=n(584),i=n(396),l=n(593);t.Alert=e=>{var{color:t,hidden:n,onReset:_}=e,u=o(e,["color","hidden","onReset"]);const[c,s]=(0,i.useState)(!1);return(0,i.useEffect)((()=>{s(n)}),[n]),(0,i.useEffect)((()=>{c||(0,l.debounce)((()=>{s(!0),_()}),3e3)()}),[c]),(0,r.jsxs)("div",Object.assign({class:`alert alert-${t} alert-dismissible fade show fixed-top mx-4 ${c?"hidden":""}`,role:"alert"},{children:[u.children,(0,r.jsx)("button",{type:"button",class:"btn-close","data-bs-dismiss":"alert","aria-label":"Close",onClick:e=>{s(!0)}})]}))},t.Button=e=>{var{color:t="primary",onClick:n}=e,i=o(e,["color","onClick"]);return(0,r.jsx)("button",Object.assign({class:`btn btn-${t} btn-sm`,type:"button",onClick:e=>{n(e)}},{children:i.children}))},t.TextInput=({onInput:e,value:t,disabled:n=!1})=>(0,r.jsx)("input",{class:"form-control",type:"text",value:t,onInput:t=>e(t),disabled:n}),t.ToggleSwitch=({onChange:e,disabled:t=!1,isOn:n=!1})=>(0,r.jsx)("div",Object.assign({class:"form-check form-switch"},{children:(0,r.jsx)("input",{class:"form-check-input",type:"checkbox",checked:n,onChange:t=>e(t),disabled:t})}))},694:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Filter=void 0;const o=n(584),r=n(396),i=n(901);t.Filter=({id:e,isOn:t,setCurrentOn:n,datum:l,datumOperation:_})=>{const[u,c]=(0,r.useState)(!1),[s,a]=(0,r.useState)(""),[f,p]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{a(l.text)}),[l.text]),(0,r.useEffect)((()=>{p(!!s)}),[s]),(0,o.jsxs)("form",Object.assign({class:"row align-items-center"},{children:[(0,o.jsx)("div",Object.assign({class:"col-3"},{children:(0,o.jsx)(i.Button,Object.assign({onClick:function(){u?(n(s?e:null),c(!1),_("patch",{id:e,datum:{text:s}})):c(!0)}},{children:u?"Save":"Edit"}))})),(0,o.jsx)("div",Object.assign({class:"col-5"},{children:(0,o.jsx)(i.TextInput,{value:s,onInput:function(e){a(e.target.value)},disabled:!u})})),(0,o.jsx)("div",Object.assign({class:"col-2 d-flex justify-content-end"},{children:u?"":(0,o.jsx)(i.Button,Object.assign({color:"danger",onClick:function(){_("delete",{id:e}),t&&n(null)}},{children:"X"}))})),(0,o.jsx)("div",Object.assign({class:"col-2 d-flex justify-content-end"},{children:u?"":(0,o.jsx)(i.ToggleSwitch,{onChange:function(t){t.target.checked?n(e):(t.target.checked=!1,n(null))},isOn:s&&t,disabled:!f})}))]}))}},593:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.debounce=void 0,t.debounce=function(e,t=500){let n;return()=>{clearTimeout(n),n=setTimeout((()=>{e()}),t)}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{const e=n(584),t=n(400),o=n(396);n(823);const r=n(901),i=n(694),l=n(828),_={text:""};(0,t.render)((0,e.jsx)((()=>{const[t,n]=(0,o.useState)([]),[u,c]=(0,o.useState)(null),[s,a]=(0,o.useState)({text:"",hidden:!0,color:"primary"});function f(e,o){try{const r=[...t];if("post"==e){if(t.length<10){const e=[...t];e.push(o.datum),n(e)}}else{if("get"==e)return r[o.id];"patch"==e?(r[o.id]=o.datum,n(r)):"delete"==e&&(r.splice(o.id,1),n(r))}}catch(e){a({text:`Error: ${e}`,hidden:!1,color:"danger"})}}return(0,o.useEffect)((()=>{(0,l.getData)({rows:[],currentOn:null}).then((e=>{n(e.rows),c(e.currentOn)})).catch((e=>{a({text:`Error: ${e}`,hidden:!1,color:"danger"})}))}),[]),(0,o.useEffect)((()=>{(0,l.setData)({rows:t,currentOn:u}).then((()=>{console.log("Saved.")})).catch((e=>{a({text:`Error: ${e}`,hidden:!1,color:"danger"})}))}),[t,u]),(0,o.useEffect)((()=>{browser.tabs.query({currentWindow:!0,active:!0}).then((e=>{browser.tabs.sendMessage(e[0].id,"number"==typeof u&&t[u].text?{task:"mutate",filter:t[u].text}:{task:"reset"})})).catch((e=>{a({text:`Error: ${e}`,hidden:!1,color:"danger"})}))}),[t,u]),(0,e.jsxs)("div",Object.assign({id:"popup",class:"container p-3 overflow-auto"},{children:[(0,e.jsx)(r.Alert,Object.assign({color:s.color,hidden:s.hidden,onReset:function(){a({text:"",hidden:!0,color:"primary"})}},{children:s.text})),(0,e.jsx)("h1",Object.assign({class:"mb-2"},{children:"Foxy-pangolins"})),t.map(((t,n)=>(0,e.jsx)(i.Filter,{id:n,isOn:n==u,setCurrentOn:c,datum:t,datumOperation:f}))),(0,e.jsx)("div",{children:(0,e.jsx)(r.Button,Object.assign({onClick:()=>f("post",{datum:_})},{children:"Add Filter"}))})]}))}),{}),document.getElementById("app"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,