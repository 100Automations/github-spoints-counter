(()=>{"use strict";var e={699:(e,t,n)=>{n.d(t,{Z:()=>_});var o=n(537),r=n.n(o),i=n(645),l=n.n(i)()(r());l.push([e.id,"#popup {\r\n  width: 400px;\r\n  height: 300px;\r\n}\r\n\r\n#popup > * {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.btn {\r\n  width: 100%;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n","",{version:3,sources:["webpack://./src/popup/popup.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;AACf",sourcesContent:["#popup {\r\n  width: 400px;\r\n  height: 300px;\r\n}\r\n\r\n#popup > * {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.btn {\r\n  width: 100%;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n"],sourceRoot:""}]);const _=l},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(o)for(var _=0;_<this.length;_++){var u=this[_][0];null!=u&&(l[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);o&&l[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),l=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(l).concat([i]).join("\n")}return[t].join("\n")}},400:(e,t,n)=>{n.r(t),n.d(t,{Component:()=>b,Fragment:()=>g,cloneElement:()=>B,createContext:()=>W,createElement:()=>v,createRef:()=>y,h:()=>v,hydrate:()=>R,isValidElement:()=>l,options:()=>r,render:()=>N,toChildArray:()=>O});var o,r,i,l,_,u,c,s,a={},f=[],p=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function d(e,t){for(var n in t)e[n]=t[n];return e}function h(e){var t=e.parentNode;t&&t.removeChild(e)}function v(e,t,n){var r,i,l,_={};for(l in t)"key"==l?r=t[l]:"ref"==l?i=t[l]:_[l]=t[l];if(arguments.length>2&&(_.children=arguments.length>3?o.call(arguments,2):n),"function"==typeof e&&null!=e.defaultProps)for(l in e.defaultProps)void 0===_[l]&&(_[l]=e.defaultProps[l]);return m(e,_,r,i,null)}function m(e,t,n,o,l){var _={type:e,props:t,key:n,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==l?++i:l};return null==l&&null!=r.vnode&&r.vnode(_),_}function y(){return{current:null}}function g(e){return e.children}function b(e,t){this.props=e,this.context=t}function x(e,t){if(null==t)return e.__?x(e.__,e.__.__k.indexOf(e)+1):null;for(var n;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e)return n.__e;return"function"==typeof e.type?x(e):null}function k(e){var t,n;if(null!=(e=e.__)&&null!=e.__c){for(e.__e=e.__c.base=null,t=0;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e){e.__e=e.__c.base=n.__e;break}return k(e)}}function A(e){(!e.__d&&(e.__d=!0)&&_.push(e)&&!C.__r++||c!==r.debounceRendering)&&((c=r.debounceRendering)||u)(C)}function C(){for(var e;C.__r=_.length;)e=_.sort((function(e,t){return e.__v.__b-t.__v.__b})),_=[],e.some((function(e){var t,n,o,r,i,l;e.__d&&(i=(r=(t=e).__v).__e,(l=t.__P)&&(n=[],(o=d({},r)).__v=r.__v+1,M(l,r,o,t.__n,void 0!==l.ownerSVGElement,null!=r.__h?[i]:null,n,null==i?x(r):i,r.__h),D(n,r),r.__e!=i&&k(r)))}))}function j(e,t,n,o,r,i,l,_,u,c){var s,p,d,h,v,y,b,k=o&&o.__k||f,A=k.length;for(n.__k=[],s=0;s<t.length;s++)if(null!=(h=n.__k[s]=null==(h=t[s])||"boolean"==typeof h?null:"string"==typeof h||"number"==typeof h||"bigint"==typeof h?m(null,h,null,null,h):Array.isArray(h)?m(g,{children:h},null,null,null):h.__b>0?m(h.type,h.props,h.key,null,h.__v):h)){if(h.__=n,h.__b=n.__b+1,null===(d=k[s])||d&&h.key==d.key&&h.type===d.type)k[s]=void 0;else for(p=0;p<A;p++){if((d=k[p])&&h.key==d.key&&h.type===d.type){k[p]=void 0;break}d=null}M(e,h,d=d||a,r,i,l,_,u,c),v=h.__e,(p=h.ref)&&d.ref!=p&&(b||(b=[]),d.ref&&b.push(d.ref,null,h),b.push(p,h.__c||v,h)),null!=v?(null==y&&(y=v),"function"==typeof h.type&&h.__k===d.__k?h.__d=u=E(h,u,e):u=S(e,h,d,k,v,u),"function"==typeof n.type&&(n.__d=u)):u&&d.__e==u&&u.parentNode!=e&&(u=x(d))}for(n.__e=y,s=A;s--;)null!=k[s]&&("function"==typeof n.type&&null!=k[s].__e&&k[s].__e==n.__d&&(n.__d=x(o,s+1)),U(k[s],k[s]));if(b)for(s=0;s<b.length;s++)I(b[s],b[++s],b[++s])}function E(e,t,n){for(var o,r=e.__k,i=0;r&&i<r.length;i++)(o=r[i])&&(o.__=e,t="function"==typeof o.type?E(o,t,n):S(n,o,o,r,o.__e,t));return t}function O(e,t){return t=t||[],null==e||"boolean"==typeof e||(Array.isArray(e)?e.some((function(e){O(e,t)})):t.push(e)),t}function S(e,t,n,o,r,i){var l,_,u;if(void 0!==t.__d)l=t.__d,t.__d=void 0;else if(null==n||r!=i||null==r.parentNode)e:if(null==i||i.parentNode!==e)e.appendChild(r),l=null;else{for(_=i,u=0;(_=_.nextSibling)&&u<o.length;u+=2)if(_==r)break e;e.insertBefore(r,i),l=i}return void 0!==l?l:r.nextSibling}function w(e,t,n){"-"===t[0]?e.setProperty(t,n):e[t]=null==n?"":"number"!=typeof n||p.test(t)?n:n+"px"}function T(e,t,n,o,r){var i;e:if("style"===t)if("string"==typeof n)e.style.cssText=n;else{if("string"==typeof o&&(e.style.cssText=o=""),o)for(t in o)n&&t in n||w(e.style,t,"");if(n)for(t in n)o&&n[t]===o[t]||w(e.style,t,n[t])}else if("o"===t[0]&&"n"===t[1])i=t!==(t=t.replace(/Capture$/,"")),t=t.toLowerCase()in e?t.toLowerCase().slice(2):t.slice(2),e.l||(e.l={}),e.l[t+i]=n,n?o||e.addEventListener(t,i?H:P,i):e.removeEventListener(t,i?H:P,i);else if("dangerouslySetInnerHTML"!==t){if(r)t=t.replace(/xlink[H:h]/,"h").replace(/sName$/,"s");else if("href"!==t&&"list"!==t&&"form"!==t&&"tabIndex"!==t&&"download"!==t&&t in e)try{e[t]=null==n?"":n;break e}catch(e){}"function"==typeof n||(null!=n&&(!1!==n||"a"===t[0]&&"r"===t[1])?e.setAttribute(t,n):e.removeAttribute(t))}}function P(e){this.l[e.type+!1](r.event?r.event(e):e)}function H(e){this.l[e.type+!0](r.event?r.event(e):e)}function M(e,t,n,o,i,l,_,u,c){var s,a,f,p,h,v,m,y,x,k,A,C=t.type;if(void 0!==t.constructor)return null;null!=n.__h&&(c=n.__h,u=t.__e=n.__e,t.__h=null,l=[u]),(s=r.__b)&&s(t);try{e:if("function"==typeof C){if(y=t.props,x=(s=C.contextType)&&o[s.__c],k=s?x?x.props.value:s.__:o,n.__c?m=(a=t.__c=n.__c).__=a.__E:("prototype"in C&&C.prototype.render?t.__c=a=new C(y,k):(t.__c=a=new b(y,k),a.constructor=C,a.render=L),x&&x.sub(a),a.props=y,a.state||(a.state={}),a.context=k,a.__n=o,f=a.__d=!0,a.__h=[]),null==a.__s&&(a.__s=a.state),null!=C.getDerivedStateFromProps&&(a.__s==a.state&&(a.__s=d({},a.__s)),d(a.__s,C.getDerivedStateFromProps(y,a.__s))),p=a.props,h=a.state,f)null==C.getDerivedStateFromProps&&null!=a.componentWillMount&&a.componentWillMount(),null!=a.componentDidMount&&a.__h.push(a.componentDidMount);else{if(null==C.getDerivedStateFromProps&&y!==p&&null!=a.componentWillReceiveProps&&a.componentWillReceiveProps(y,k),!a.__e&&null!=a.shouldComponentUpdate&&!1===a.shouldComponentUpdate(y,a.__s,k)||t.__v===n.__v){a.props=y,a.state=a.__s,t.__v!==n.__v&&(a.__d=!1),a.__v=t,t.__e=n.__e,t.__k=n.__k,t.__k.forEach((function(e){e&&(e.__=t)})),a.__h.length&&_.push(a);break e}null!=a.componentWillUpdate&&a.componentWillUpdate(y,a.__s,k),null!=a.componentDidUpdate&&a.__h.push((function(){a.componentDidUpdate(p,h,v)}))}a.context=k,a.props=y,a.state=a.__s,(s=r.__r)&&s(t),a.__d=!1,a.__v=t,a.__P=e,s=a.render(a.props,a.state,a.context),a.state=a.__s,null!=a.getChildContext&&(o=d(d({},o),a.getChildContext())),f||null==a.getSnapshotBeforeUpdate||(v=a.getSnapshotBeforeUpdate(p,h)),A=null!=s&&s.type===g&&null==s.key?s.props.children:s,j(e,Array.isArray(A)?A:[A],t,n,o,i,l,_,u,c),a.base=t.__e,t.__h=null,a.__h.length&&_.push(a),m&&(a.__E=a.__=null),a.__e=!1}else null==l&&t.__v===n.__v?(t.__k=n.__k,t.__e=n.__e):t.__e=F(n.__e,t,n,o,i,l,_,c);(s=r.diffed)&&s(t)}catch(e){t.__v=null,(c||null!=l)&&(t.__e=u,t.__h=!!c,l[l.indexOf(u)]=null),r.__e(e,t,n)}}function D(e,t){r.__c&&r.__c(t,e),e.some((function(t){try{e=t.__h,t.__h=[],e.some((function(e){e.call(t)}))}catch(e){r.__e(e,t.__v)}}))}function F(e,t,n,r,i,l,_,u){var c,s,f,p=n.props,d=t.props,v=t.type,m=0;if("svg"===v&&(i=!0),null!=l)for(;m<l.length;m++)if((c=l[m])&&"setAttribute"in c==!!v&&(v?c.localName===v:3===c.nodeType)){e=c,l[m]=null;break}if(null==e){if(null===v)return document.createTextNode(d);e=i?document.createElementNS("http://www.w3.org/2000/svg",v):document.createElement(v,d.is&&d),l=null,u=!1}if(null===v)p===d||u&&e.data===d||(e.data=d);else{if(l=l&&o.call(e.childNodes),s=(p=n.props||a).dangerouslySetInnerHTML,f=d.dangerouslySetInnerHTML,!u){if(null!=l)for(p={},m=0;m<e.attributes.length;m++)p[e.attributes[m].name]=e.attributes[m].value;(f||s)&&(f&&(s&&f.__html==s.__html||f.__html===e.innerHTML)||(e.innerHTML=f&&f.__html||""))}if(function(e,t,n,o,r){var i;for(i in n)"children"===i||"key"===i||i in t||T(e,i,null,n[i],o);for(i in t)r&&"function"!=typeof t[i]||"children"===i||"key"===i||"value"===i||"checked"===i||n[i]===t[i]||T(e,i,t[i],n[i],o)}(e,d,p,i,u),f)t.__k=[];else if(m=t.props.children,j(e,Array.isArray(m)?m:[m],t,n,r,i&&"foreignObject"!==v,l,_,l?l[0]:n.__k&&x(n,0),u),null!=l)for(m=l.length;m--;)null!=l[m]&&h(l[m]);u||("value"in d&&void 0!==(m=d.value)&&(m!==e.value||"progress"===v&&!m||"option"===v&&m!==p.value)&&T(e,"value",m,p.value,!1),"checked"in d&&void 0!==(m=d.checked)&&m!==e.checked&&T(e,"checked",m,p.checked,!1))}return e}function I(e,t,n){try{"function"==typeof e?e(t):e.current=t}catch(e){r.__e(e,n)}}function U(e,t,n){var o,i;if(r.unmount&&r.unmount(e),(o=e.ref)&&(o.current&&o.current!==e.__e||I(o,null,t)),null!=(o=e.__c)){if(o.componentWillUnmount)try{o.componentWillUnmount()}catch(e){r.__e(e,t)}o.base=o.__P=null}if(o=e.__k)for(i=0;i<o.length;i++)o[i]&&U(o[i],t,"function"!=typeof e.type);n||null==e.__e||h(e.__e),e.__e=e.__d=void 0}function L(e,t,n){return this.constructor(e,n)}function N(e,t,n){var i,l,_;r.__&&r.__(e,t),l=(i="function"==typeof n)?null:n&&n.__k||t.__k,_=[],M(t,e=(!i&&n||t).__k=v(g,null,[e]),l||a,a,void 0!==t.ownerSVGElement,!i&&n?[n]:l?null:t.firstChild?o.call(t.childNodes):null,_,!i&&n?n:l?l.__e:t.firstChild,i),D(_,e)}function R(e,t){N(e,t,R)}function B(e,t,n){var r,i,l,_=d({},e.props);for(l in t)"key"==l?r=t[l]:"ref"==l?i=t[l]:_[l]=t[l];return arguments.length>2&&(_.children=arguments.length>3?o.call(arguments,2):n),m(e.type,_,r||e.key,i||e.ref,null)}function W(e,t){var n={__c:t="__cC"+s++,__:e,Consumer:function(e,t){return e.children(t)},Provider:function(e){var n,o;return this.getChildContext||(n=[],(o={})[t]=this,this.getChildContext=function(){return o},this.shouldComponentUpdate=function(e){this.props.value!==e.value&&n.some(A)},this.sub=function(e){n.push(e);var t=e.componentWillUnmount;e.componentWillUnmount=function(){n.splice(n.indexOf(e),1),t&&t.call(e)}}),e.children}};return n.Provider.__=n.Consumer.contextType=n}o=f.slice,r={__e:function(e,t){for(var n,o,r;t=t.__;)if((n=t.__c)&&!n.__)try{if((o=n.constructor)&&null!=o.getDerivedStateFromError&&(n.setState(o.getDerivedStateFromError(e)),r=n.__d),null!=n.componentDidCatch&&(n.componentDidCatch(e),r=n.__d),r)return n.__E=n}catch(t){e=t}throw e}},i=0,l=function(e){return null!=e&&void 0===e.constructor},b.prototype.setState=function(e,t){var n;n=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=d({},this.state),"function"==typeof e&&(e=e(d({},n),this.props)),e&&d(n,e),null!=e&&this.__v&&(t&&this.__h.push(t),A(this))},b.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),A(this))},b.prototype.render=g,_=[],u="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,C.__r=0,s=0},396:(e,t,n)=>{n.r(t),n.d(t,{useCallback:()=>k,useContext:()=>A,useDebugValue:()=>C,useEffect:()=>m,useErrorBoundary:()=>j,useImperativeHandle:()=>b,useLayoutEffect:()=>y,useMemo:()=>x,useReducer:()=>v,useRef:()=>g,useState:()=>h});var o,r,i,l=n(400),_=0,u=[],c=l.options.__b,s=l.options.__r,a=l.options.diffed,f=l.options.__c,p=l.options.unmount;function d(e,t){l.options.__h&&l.options.__h(r,e,_||t),_=0;var n=r.__H||(r.__H={__:[],__h:[]});return e>=n.__.length&&n.__.push({}),n.__[e]}function h(e){return _=1,v(P,e)}function v(e,t,n){var i=d(o++,2);return i.t=e,i.__c||(i.__=[n?n(t):P(void 0,t),function(e){var t=i.t(i.__[0],e);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}],i.__c=r),i.__}function m(e,t){var n=d(o++,3);!l.options.__s&&T(n.__H,t)&&(n.__=e,n.__H=t,r.__H.__h.push(n))}function y(e,t){var n=d(o++,4);!l.options.__s&&T(n.__H,t)&&(n.__=e,n.__H=t,r.__h.push(n))}function g(e){return _=5,x((function(){return{current:e}}),[])}function b(e,t,n){_=6,y((function(){"function"==typeof e?e(t()):e&&(e.current=t())}),null==n?n:n.concat(e))}function x(e,t){var n=d(o++,7);return T(n.__H,t)&&(n.__=e(),n.__H=t,n.__h=e),n.__}function k(e,t){return _=8,x((function(){return e}),t)}function A(e){var t=r.context[e.__c],n=d(o++,9);return n.c=e,t?(null==n.__&&(n.__=!0,t.sub(r)),t.props.value):e.__}function C(e,t){l.options.useDebugValue&&l.options.useDebugValue(t?t(e):e)}function j(e){var t=d(o++,10),n=h();return t.__=e,r.componentDidCatch||(r.componentDidCatch=function(e){t.__&&t.__(e),n[1](e)}),[n[0],function(){n[1](void 0)}]}function E(){for(var e;e=u.shift();)if(e.__P)try{e.__H.__h.forEach(S),e.__H.__h.forEach(w),e.__H.__h=[]}catch(t){e.__H.__h=[],l.options.__e(t,e.__v)}}l.options.__b=function(e){r=null,c&&c(e)},l.options.__r=function(e){s&&s(e),o=0;var t=(r=e.__c).__H;t&&(t.__h.forEach(S),t.__h.forEach(w),t.__h=[])},l.options.diffed=function(e){a&&a(e);var t=e.__c;t&&t.__H&&t.__H.__h.length&&(1!==u.push(t)&&i===l.options.requestAnimationFrame||((i=l.options.requestAnimationFrame)||function(e){var t,n=function(){clearTimeout(o),O&&cancelAnimationFrame(t),setTimeout(e)},o=setTimeout(n,100);O&&(t=requestAnimationFrame(n))})(E)),r=null},l.options.__c=function(e,t){t.some((function(e){try{e.__h.forEach(S),e.__h=e.__h.filter((function(e){return!e.__||w(e)}))}catch(n){t.some((function(e){e.__h&&(e.__h=[])})),t=[],l.options.__e(n,e.__v)}})),f&&f(e,t)},l.options.unmount=function(e){p&&p(e);var t,n=e.__c;n&&n.__H&&(n.__H.__.forEach((function(e){try{S(e)}catch(e){t=e}})),t&&l.options.__e(t,n.__v))};var O="function"==typeof requestAnimationFrame;function S(e){var t=r,n=e.__c;"function"==typeof n&&(e.__c=void 0,n()),r=t}function w(e){var t=r;e.__c=e.__(),r=t}function T(e,t){return!e||e.length!==t.length||t.some((function(t,n){return t!==e[n]}))}function P(e,t){return"function"==typeof t?t(e):t}},584:(e,t,n)=>{n.r(t),n.d(t,{Fragment:()=>o.Fragment,jsx:()=>i,jsxDEV:()=>i,jsxs:()=>i});var o=n(400),r=0;function i(e,t,n,i,l){var _,u,c={};for(u in t)"ref"==u?_=t[u]:c[u]=t[u];var s={type:e,props:c,key:n,ref:_,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--r,__source:i,__self:l};if("function"==typeof e&&(_=e.defaultProps))for(u in _)void 0===c[u]&&(c[u]=_[u]);return o.options.vnode&&o.options.vnode(s),s}},823:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var o=n(379),r=n.n(o),i=n(795),l=n.n(i),_=n(569),u=n.n(_),c=n(565),s=n.n(c),a=n(216),f=n.n(a),p=n(589),d=n.n(p),h=n(699),v={};v.styleTagTransform=d(),v.setAttributes=s(),v.insert=u().bind(null,"head"),v.domAPI=l(),v.insertStyleElement=f(),r()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},l=[],_=0;_<e.length;_++){var u=e[_],c=o.base?u[0]+o.base:u[0],s=i[c]||0,a="".concat(c," ").concat(s);i[c]=s+1;var f=n(a),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var d=r(p,o);o.byIndex=_,t.splice(_,0,{identifier:a,updater:d,references:1})}l.push(a)}return l}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var l=0;l<i.length;l++){var _=n(i[l]);t[_].references--}for(var u=o(e,r),c=0;c<i.length;c++){var s=n(i[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=u}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},828:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.setData=t.getData=void 0,t.getData=function(e){return browser.storage.local.get(e)},t.setData=function(e){return browser.storage.local.set(e)}},901:function(e,t,n){var o=this&&this.__rest||function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]])}return n};Object.defineProperty(t,"__esModule",{value:!0}),t.ToggleSwitch=t.TextInput=t.Button=t.Alert=void 0;const r=n(584),i=n(396),l=n(593);t.Alert=e=>{var{color:t,hidden:n}=e,_=o(e,["color","hidden"]);const[u,c]=(0,i.useState)(!1);return(0,i.useEffect)((()=>{c(n)}),[n]),(0,i.useEffect)((()=>{u||(0,l.debounce)((()=>{c(!0)}),1500)()}),[u]),(0,r.jsxs)("div",Object.assign({class:`alert alert-${t} alert-dismissible fade show fixed-top mx-4 ${u?"hidden":""}`,role:"alert"},{children:[_.children,(0,r.jsx)("button",{type:"button",class:"btn-close","data-bs-dismiss":"alert","aria-label":"Close",onClick:e=>{c(!0)}})]}))},t.Button=e=>{var{color:t="primary",onClick:n}=e,i=o(e,["color","onClick"]);return(0,r.jsx)("button",Object.assign({class:`btn btn-${t} btn-sm`,type:"button",onClick:e=>{n(e)}},{children:i.children}))},t.TextInput=({onInput:e,value:t,disabled:n=!1})=>(0,r.jsx)("input",{class:"form-control",type:"text",value:t,onInput:t=>e(t),disabled:n}),t.ToggleSwitch=({onChange:e,disabled:t=!1,isOn:n=!1})=>(0,r.jsx)("div",Object.assign({class:"form-check form-switch"},{children:(0,r.jsx)("input",{class:"form-check-input",type:"checkbox",checked:n,onChange:t=>e(t),disabled:t})}))},694:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Filter=void 0;const o=n(584),r=n(396),i=n(901);t.Filter=({id:e,isOn:t,setCurrentOn:n,datumOperation:l})=>{const[_,u]=(0,r.useState)(!1),[c,s]=(0,r.useState)(""),[a,f]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{s(l("get",{id:e}).text)}),[]),(0,r.useEffect)((()=>{f(!!c)}),[c]),(0,o.jsxs)("form",Object.assign({class:"row align-items-center"},{children:[(0,o.jsx)("div",Object.assign({class:"col-3"},{children:(0,o.jsx)(i.Button,Object.assign({onClick:function(){_?(n(c?e:null),u(!1),l("patch",{id:e,datum:{text:c}})):u(!0)}},{children:_?"Save":"Edit"}))})),(0,o.jsx)("div",Object.assign({class:"col-5"},{children:(0,o.jsx)(i.TextInput,{value:c,onInput:function(e){s(e.target.value)},disabled:!_})})),(0,o.jsx)("div",Object.assign({class:"col-2 d-flex justify-content-end"},{children:_?"":(0,o.jsx)(i.Button,Object.assign({color:"danger",onClick:function(){l("delete",{id:e}),t&&n(null)}},{children:"X"}))})),(0,o.jsx)("div",Object.assign({class:"col-2 d-flex justify-content-end"},{children:_?"":(0,o.jsx)(i.ToggleSwitch,{onChange:function(t){t.target.checked?n(e):(t.target.checked=!1,n(null))},isOn:c&&t,disabled:!a})}))]}))}},593:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.debounce=void 0,t.debounce=function(e,t=500){let n;return()=>{clearTimeout(n),n=setTimeout((()=>{e()}),t)}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{const e=n(584),t=n(400),o=n(396);n(823);const r=n(901),i=n(694),l=n(828),_={text:""};(0,t.render)((0,e.jsx)((()=>{const[t,n]=(0,o.useState)([]),[u,c]=(0,o.useState)(null),[s,a]=(0,o.useState)({text:"",hidden:!0,color:"primary"});function f(e,o){try{const r=[...t];if("post"==e){if(t.length<10){const e=[...t];e.push(o.datum),n(e)}}else{if("get"==e)return r[o.id];"patch"==e?(r[o.id]=o.datum,n(r),a({text:"Saved.",hidden:!1,color:"success"})):"delete"==e&&(r.splice(o.id,1),n(r))}}catch(e){a({text:`Error: ${e}`,hidden:!1,color:"danger"})}}return(0,o.useEffect)((()=>{(0,l.getData)({rows:[],currentOn:null}).then((e=>{n(e.rows),c(e.currentOn)})).catch((e=>{a({text:`Error: ${e}`,hidden:!1,color:"danger"})}))}),[]),(0,o.useEffect)((()=>{(0,l.setData)({rows:t,currentOn:u}).then((()=>{console.log("Saved.")})).catch((e=>{a({text:`Error: ${e}`,hidden:!1,color:"danger"})}))}),[t,u]),(0,o.useEffect)((()=>{browser.tabs.query({currentWindow:!0,active:!0}).then((e=>{browser.tabs.sendMessage(e[0].id,"number"==typeof u&&t[u].text?{task:"mutate",filter:t[u].text}:{task:"reset"})})).catch((e=>{a({text:`Error: ${e}`,hidden:!1,color:"danger"})}))}),[t,u]),(0,e.jsxs)("div",Object.assign({id:"popup",class:"container p-3 overflow-auto"},{children:[(0,e.jsx)(r.Alert,Object.assign({color:s.color,hidden:s.hidden},{children:s.text})),(0,e.jsx)("h1",Object.assign({class:"mb-1"},{children:"Foxy-pangolins"})),t.map(((t,n)=>(0,e.jsx)(i.Filter,{id:n,isOn:n==u,setCurrentOn:c,datumOperation:f}))),(0,e.jsx)("div",{children:(0,e.jsx)(r.Button,Object.assign({onClick:()=>f("post",{datum:_})},{children:"Add Filter"}))})]}))}),{}),document.getElementById("app"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUU1USxHQUFJZ04sRUFBTzJELEtBQU0zRCxHQUFTNEYsRUFBVzlCLGFBQWNBLEVBQWNDLGVBQWdCQSxPQUNuSSxFQUFJekIsRUFBY2dCLEtBQUssTUFBTyxDQUFFbE4sVUFBVSxFQUFJa00sRUFBY2dCLEtBQUtPLEVBQWF6QixPQUFRaEIsT0FBTytCLE9BQU8sQ0FBRUksUUFBUyxJQUFNUSxFQUFlLE9BQVEsQ0FBRU8sTUFBT21CLEtBQWUsQ0FBRXJQLFNBQVUsd0JBRTdJLElBQUt1RixTQUFTK0ssZUFBZSxTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm94eS1wYW5nb2xpbnMvLi9zcmMvcG9wdXAvcG9wdXAuY3NzIiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vbm9kZV9tb2R1bGVzL3ByZWFjdC9kaXN0L3ByZWFjdC5tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vZm94eS1wYW5nb2xpbnMvLi9ub2RlX21vZHVsZXMvcHJlYWN0L2hvb2tzL2Rpc3QvaG9va3MubW9kdWxlLmpzIiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vbm9kZV9tb2R1bGVzL3ByZWFjdC9qc3gtcnVudGltZS9kaXN0L2pzeFJ1bnRpbWUubW9kdWxlLmpzIiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vc3JjL3BvcHVwL3BvcHVwLmNzcz9mMmM2Iiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vZm94eS1wYW5nb2xpbnMvLi9zcmMvZGF0YUhhbmRsZXIudHMiLCJ3ZWJwYWNrOi8vZm94eS1wYW5nb2xpbnMvLi9zcmMvcG9wdXAvQ29tcG9uZW50cy50c3giLCJ3ZWJwYWNrOi8vZm94eS1wYW5nb2xpbnMvLi9zcmMvcG9wdXAvRmlsdGVyLnRzeCIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy8uL3NyYy91dGlscy50cyIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZm94eS1wYW5nb2xpbnMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9mb3h5LXBhbmdvbGlucy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL2ZveHktcGFuZ29saW5zLy4vc3JjL3BvcHVwL3BvcHVwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIiNwb3B1cCB7XFxyXFxuICB3aWR0aDogNDAwcHg7XFxyXFxuICBoZWlnaHQ6IDMwMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jcG9wdXAgPiAqIHtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ0biB7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuLmhpZGRlbiB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvcG9wdXAvcG9wdXAuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7QUFDZlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjcG9wdXAge1xcclxcbiAgd2lkdGg6IDQwMHB4O1xcclxcbiAgaGVpZ2h0OiAzMDBweDtcXHJcXG59XFxyXFxuXFxyXFxuI3BvcHVwID4gKiB7XFxyXFxuICBtYXJnaW4tYm90dG9tOiA4cHg7XFxyXFxufVxcclxcblxcclxcbi5idG4ge1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbi5oaWRkZW4ge1xcclxcbiAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsInZhciBuLGwsdSxpLHQsbyxyLGYsZT17fSxjPVtdLHM9L2FjaXR8ZXgoPzpzfGd8bnxwfCQpfHJwaHxncmlkfG93c3xtbmN8bnR3fGluZVtjaF18em9vfF5vcmR8aXRlcmEvaTtmdW5jdGlvbiBhKG4sbCl7Zm9yKHZhciB1IGluIGwpblt1XT1sW3VdO3JldHVybiBufWZ1bmN0aW9uIGgobil7dmFyIGw9bi5wYXJlbnROb2RlO2wmJmwucmVtb3ZlQ2hpbGQobil9ZnVuY3Rpb24gdihsLHUsaSl7dmFyIHQsbyxyLGY9e307Zm9yKHIgaW4gdSlcImtleVwiPT1yP3Q9dVtyXTpcInJlZlwiPT1yP289dVtyXTpmW3JdPXVbcl07aWYoYXJndW1lbnRzLmxlbmd0aD4yJiYoZi5jaGlsZHJlbj1hcmd1bWVudHMubGVuZ3RoPjM/bi5jYWxsKGFyZ3VtZW50cywyKTppKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBsJiZudWxsIT1sLmRlZmF1bHRQcm9wcylmb3IociBpbiBsLmRlZmF1bHRQcm9wcyl2b2lkIDA9PT1mW3JdJiYoZltyXT1sLmRlZmF1bHRQcm9wc1tyXSk7cmV0dXJuIHkobCxmLHQsbyxudWxsKX1mdW5jdGlvbiB5KG4saSx0LG8scil7dmFyIGY9e3R5cGU6bixwcm9wczppLGtleTp0LHJlZjpvLF9fazpudWxsLF9fOm51bGwsX19iOjAsX19lOm51bGwsX19kOnZvaWQgMCxfX2M6bnVsbCxfX2g6bnVsbCxjb25zdHJ1Y3Rvcjp2b2lkIDAsX192Om51bGw9PXI/Kyt1OnJ9O3JldHVybiBudWxsPT1yJiZudWxsIT1sLnZub2RlJiZsLnZub2RlKGYpLGZ9ZnVuY3Rpb24gcCgpe3JldHVybntjdXJyZW50Om51bGx9fWZ1bmN0aW9uIGQobil7cmV0dXJuIG4uY2hpbGRyZW59ZnVuY3Rpb24gXyhuLGwpe3RoaXMucHJvcHM9bix0aGlzLmNvbnRleHQ9bH1mdW5jdGlvbiBrKG4sbCl7aWYobnVsbD09bClyZXR1cm4gbi5fXz9rKG4uX18sbi5fXy5fX2suaW5kZXhPZihuKSsxKTpudWxsO2Zvcih2YXIgdTtsPG4uX19rLmxlbmd0aDtsKyspaWYobnVsbCE9KHU9bi5fX2tbbF0pJiZudWxsIT11Ll9fZSlyZXR1cm4gdS5fX2U7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbi50eXBlP2sobik6bnVsbH1mdW5jdGlvbiBiKG4pe3ZhciBsLHU7aWYobnVsbCE9KG49bi5fXykmJm51bGwhPW4uX19jKXtmb3Iobi5fX2U9bi5fX2MuYmFzZT1udWxsLGw9MDtsPG4uX19rLmxlbmd0aDtsKyspaWYobnVsbCE9KHU9bi5fX2tbbF0pJiZudWxsIT11Ll9fZSl7bi5fX2U9bi5fX2MuYmFzZT11Ll9fZTticmVha31yZXR1cm4gYihuKX19ZnVuY3Rpb24gbShuKXsoIW4uX19kJiYobi5fX2Q9ITApJiZ0LnB1c2gobikmJiFnLl9fcisrfHxyIT09bC5kZWJvdW5jZVJlbmRlcmluZykmJigocj1sLmRlYm91bmNlUmVuZGVyaW5nKXx8bykoZyl9ZnVuY3Rpb24gZygpe2Zvcih2YXIgbjtnLl9fcj10Lmxlbmd0aDspbj10LnNvcnQoZnVuY3Rpb24obixsKXtyZXR1cm4gbi5fX3YuX19iLWwuX192Ll9fYn0pLHQ9W10sbi5zb21lKGZ1bmN0aW9uKG4pe3ZhciBsLHUsaSx0LG8scjtuLl9fZCYmKG89KHQ9KGw9bikuX192KS5fX2UsKHI9bC5fX1ApJiYodT1bXSwoaT1hKHt9LHQpKS5fX3Y9dC5fX3YrMSxqKHIsdCxpLGwuX19uLHZvaWQgMCE9PXIub3duZXJTVkdFbGVtZW50LG51bGwhPXQuX19oP1tvXTpudWxsLHUsbnVsbD09bz9rKHQpOm8sdC5fX2gpLHoodSx0KSx0Ll9fZSE9byYmYih0KSkpfSl9ZnVuY3Rpb24gdyhuLGwsdSxpLHQsbyxyLGYscyxhKXt2YXIgaCx2LHAsXyxiLG0sZyx3PWkmJmkuX19rfHxjLEE9dy5sZW5ndGg7Zm9yKHUuX19rPVtdLGg9MDtoPGwubGVuZ3RoO2grKylpZihudWxsIT0oXz11Ll9fa1toXT1udWxsPT0oXz1sW2hdKXx8XCJib29sZWFuXCI9PXR5cGVvZiBfP251bGw6XCJzdHJpbmdcIj09dHlwZW9mIF98fFwibnVtYmVyXCI9PXR5cGVvZiBffHxcImJpZ2ludFwiPT10eXBlb2YgXz95KG51bGwsXyxudWxsLG51bGwsXyk6QXJyYXkuaXNBcnJheShfKT95KGQse2NoaWxkcmVuOl99LG51bGwsbnVsbCxudWxsKTpfLl9fYj4wP3koXy50eXBlLF8ucHJvcHMsXy5rZXksbnVsbCxfLl9fdik6Xykpe2lmKF8uX189dSxfLl9fYj11Ll9fYisxLG51bGw9PT0ocD13W2hdKXx8cCYmXy5rZXk9PXAua2V5JiZfLnR5cGU9PT1wLnR5cGUpd1toXT12b2lkIDA7ZWxzZSBmb3Iodj0wO3Y8QTt2Kyspe2lmKChwPXdbdl0pJiZfLmtleT09cC5rZXkmJl8udHlwZT09PXAudHlwZSl7d1t2XT12b2lkIDA7YnJlYWt9cD1udWxsfWoobixfLHA9cHx8ZSx0LG8scixmLHMsYSksYj1fLl9fZSwodj1fLnJlZikmJnAucmVmIT12JiYoZ3x8KGc9W10pLHAucmVmJiZnLnB1c2gocC5yZWYsbnVsbCxfKSxnLnB1c2godixfLl9fY3x8YixfKSksbnVsbCE9Yj8obnVsbD09bSYmKG09YiksXCJmdW5jdGlvblwiPT10eXBlb2YgXy50eXBlJiZfLl9faz09PXAuX19rP18uX19kPXM9eChfLHMsbik6cz1QKG4sXyxwLHcsYixzKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB1LnR5cGUmJih1Ll9fZD1zKSk6cyYmcC5fX2U9PXMmJnMucGFyZW50Tm9kZSE9biYmKHM9ayhwKSl9Zm9yKHUuX19lPW0saD1BO2gtLTspbnVsbCE9d1toXSYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHUudHlwZSYmbnVsbCE9d1toXS5fX2UmJndbaF0uX19lPT11Ll9fZCYmKHUuX19kPWsoaSxoKzEpKSxOKHdbaF0sd1toXSkpO2lmKGcpZm9yKGg9MDtoPGcubGVuZ3RoO2grKylNKGdbaF0sZ1srK2hdLGdbKytoXSl9ZnVuY3Rpb24geChuLGwsdSl7Zm9yKHZhciBpLHQ9bi5fX2ssbz0wO3QmJm88dC5sZW5ndGg7bysrKShpPXRbb10pJiYoaS5fXz1uLGw9XCJmdW5jdGlvblwiPT10eXBlb2YgaS50eXBlP3goaSxsLHUpOlAodSxpLGksdCxpLl9fZSxsKSk7cmV0dXJuIGx9ZnVuY3Rpb24gQShuLGwpe3JldHVybiBsPWx8fFtdLG51bGw9PW58fFwiYm9vbGVhblwiPT10eXBlb2Ygbnx8KEFycmF5LmlzQXJyYXkobik/bi5zb21lKGZ1bmN0aW9uKG4pe0EobixsKX0pOmwucHVzaChuKSksbH1mdW5jdGlvbiBQKG4sbCx1LGksdCxvKXt2YXIgcixmLGU7aWYodm9pZCAwIT09bC5fX2Qpcj1sLl9fZCxsLl9fZD12b2lkIDA7ZWxzZSBpZihudWxsPT11fHx0IT1vfHxudWxsPT10LnBhcmVudE5vZGUpbjppZihudWxsPT1vfHxvLnBhcmVudE5vZGUhPT1uKW4uYXBwZW5kQ2hpbGQodCkscj1udWxsO2Vsc2V7Zm9yKGY9byxlPTA7KGY9Zi5uZXh0U2libGluZykmJmU8aS5sZW5ndGg7ZSs9MilpZihmPT10KWJyZWFrIG47bi5pbnNlcnRCZWZvcmUodCxvKSxyPW99cmV0dXJuIHZvaWQgMCE9PXI/cjp0Lm5leHRTaWJsaW5nfWZ1bmN0aW9uIEMobixsLHUsaSx0KXt2YXIgbztmb3IobyBpbiB1KVwiY2hpbGRyZW5cIj09PW98fFwia2V5XCI9PT1vfHxvIGluIGx8fEgobixvLG51bGwsdVtvXSxpKTtmb3IobyBpbiBsKXQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGxbb118fFwiY2hpbGRyZW5cIj09PW98fFwia2V5XCI9PT1vfHxcInZhbHVlXCI9PT1vfHxcImNoZWNrZWRcIj09PW98fHVbb109PT1sW29dfHxIKG4sbyxsW29dLHVbb10saSl9ZnVuY3Rpb24gJChuLGwsdSl7XCItXCI9PT1sWzBdP24uc2V0UHJvcGVydHkobCx1KTpuW2xdPW51bGw9PXU/XCJcIjpcIm51bWJlclwiIT10eXBlb2YgdXx8cy50ZXN0KGwpP3U6dStcInB4XCJ9ZnVuY3Rpb24gSChuLGwsdSxpLHQpe3ZhciBvO246aWYoXCJzdHlsZVwiPT09bClpZihcInN0cmluZ1wiPT10eXBlb2YgdSluLnN0eWxlLmNzc1RleHQ9dTtlbHNle2lmKFwic3RyaW5nXCI9PXR5cGVvZiBpJiYobi5zdHlsZS5jc3NUZXh0PWk9XCJcIiksaSlmb3IobCBpbiBpKXUmJmwgaW4gdXx8JChuLnN0eWxlLGwsXCJcIik7aWYodSlmb3IobCBpbiB1KWkmJnVbbF09PT1pW2xdfHwkKG4uc3R5bGUsbCx1W2xdKX1lbHNlIGlmKFwib1wiPT09bFswXSYmXCJuXCI9PT1sWzFdKW89bCE9PShsPWwucmVwbGFjZSgvQ2FwdHVyZSQvLFwiXCIpKSxsPWwudG9Mb3dlckNhc2UoKWluIG4/bC50b0xvd2VyQ2FzZSgpLnNsaWNlKDIpOmwuc2xpY2UoMiksbi5sfHwobi5sPXt9KSxuLmxbbCtvXT11LHU/aXx8bi5hZGRFdmVudExpc3RlbmVyKGwsbz9UOkksbyk6bi5yZW1vdmVFdmVudExpc3RlbmVyKGwsbz9UOkksbyk7ZWxzZSBpZihcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sKXtpZih0KWw9bC5yZXBsYWNlKC94bGlua1tIOmhdLyxcImhcIikucmVwbGFjZSgvc05hbWUkLyxcInNcIik7ZWxzZSBpZihcImhyZWZcIiE9PWwmJlwibGlzdFwiIT09bCYmXCJmb3JtXCIhPT1sJiZcInRhYkluZGV4XCIhPT1sJiZcImRvd25sb2FkXCIhPT1sJiZsIGluIG4pdHJ5e25bbF09bnVsbD09dT9cIlwiOnU7YnJlYWsgbn1jYXRjaChuKXt9XCJmdW5jdGlvblwiPT10eXBlb2YgdXx8KG51bGwhPXUmJighMSE9PXV8fFwiYVwiPT09bFswXSYmXCJyXCI9PT1sWzFdKT9uLnNldEF0dHJpYnV0ZShsLHUpOm4ucmVtb3ZlQXR0cmlidXRlKGwpKX19ZnVuY3Rpb24gSShuKXt0aGlzLmxbbi50eXBlKyExXShsLmV2ZW50P2wuZXZlbnQobik6bil9ZnVuY3Rpb24gVChuKXt0aGlzLmxbbi50eXBlKyEwXShsLmV2ZW50P2wuZXZlbnQobik6bil9ZnVuY3Rpb24gaihuLHUsaSx0LG8scixmLGUsYyl7dmFyIHMsaCx2LHkscCxrLGIsbSxnLHgsQSxQPXUudHlwZTtpZih2b2lkIDAhPT11LmNvbnN0cnVjdG9yKXJldHVybiBudWxsO251bGwhPWkuX19oJiYoYz1pLl9faCxlPXUuX19lPWkuX19lLHUuX19oPW51bGwscj1bZV0pLChzPWwuX19iKSYmcyh1KTt0cnl7bjppZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBQKXtpZihtPXUucHJvcHMsZz0ocz1QLmNvbnRleHRUeXBlKSYmdFtzLl9fY10seD1zP2c/Zy5wcm9wcy52YWx1ZTpzLl9fOnQsaS5fX2M/Yj0oaD11Ll9fYz1pLl9fYykuX189aC5fX0U6KFwicHJvdG90eXBlXCJpbiBQJiZQLnByb3RvdHlwZS5yZW5kZXI/dS5fX2M9aD1uZXcgUChtLHgpOih1Ll9fYz1oPW5ldyBfKG0seCksaC5jb25zdHJ1Y3Rvcj1QLGgucmVuZGVyPU8pLGcmJmcuc3ViKGgpLGgucHJvcHM9bSxoLnN0YXRlfHwoaC5zdGF0ZT17fSksaC5jb250ZXh0PXgsaC5fX249dCx2PWguX19kPSEwLGguX19oPVtdKSxudWxsPT1oLl9fcyYmKGguX19zPWguc3RhdGUpLG51bGwhPVAuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzJiYoaC5fX3M9PWguc3RhdGUmJihoLl9fcz1hKHt9LGguX19zKSksYShoLl9fcyxQLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhtLGguX19zKSkpLHk9aC5wcm9wcyxwPWguc3RhdGUsdiludWxsPT1QLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyYmbnVsbCE9aC5jb21wb25lbnRXaWxsTW91bnQmJmguY29tcG9uZW50V2lsbE1vdW50KCksbnVsbCE9aC5jb21wb25lbnREaWRNb3VudCYmaC5fX2gucHVzaChoLmNvbXBvbmVudERpZE1vdW50KTtlbHNle2lmKG51bGw9PVAuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzJiZtIT09eSYmbnVsbCE9aC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZoLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobSx4KSwhaC5fX2UmJm51bGwhPWguc2hvdWxkQ29tcG9uZW50VXBkYXRlJiYhMT09PWguc2hvdWxkQ29tcG9uZW50VXBkYXRlKG0saC5fX3MseCl8fHUuX192PT09aS5fX3Ype2gucHJvcHM9bSxoLnN0YXRlPWguX19zLHUuX192IT09aS5fX3YmJihoLl9fZD0hMSksaC5fX3Y9dSx1Ll9fZT1pLl9fZSx1Ll9faz1pLl9fayx1Ll9fay5mb3JFYWNoKGZ1bmN0aW9uKG4pe24mJihuLl9fPXUpfSksaC5fX2gubGVuZ3RoJiZmLnB1c2goaCk7YnJlYWsgbn1udWxsIT1oLmNvbXBvbmVudFdpbGxVcGRhdGUmJmguY29tcG9uZW50V2lsbFVwZGF0ZShtLGguX19zLHgpLG51bGwhPWguY29tcG9uZW50RGlkVXBkYXRlJiZoLl9faC5wdXNoKGZ1bmN0aW9uKCl7aC5jb21wb25lbnREaWRVcGRhdGUoeSxwLGspfSl9aC5jb250ZXh0PXgsaC5wcm9wcz1tLGguc3RhdGU9aC5fX3MsKHM9bC5fX3IpJiZzKHUpLGguX19kPSExLGguX192PXUsaC5fX1A9bixzPWgucmVuZGVyKGgucHJvcHMsaC5zdGF0ZSxoLmNvbnRleHQpLGguc3RhdGU9aC5fX3MsbnVsbCE9aC5nZXRDaGlsZENvbnRleHQmJih0PWEoYSh7fSx0KSxoLmdldENoaWxkQ29udGV4dCgpKSksdnx8bnVsbD09aC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8KGs9aC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSh5LHApKSxBPW51bGwhPXMmJnMudHlwZT09PWQmJm51bGw9PXMua2V5P3MucHJvcHMuY2hpbGRyZW46cyx3KG4sQXJyYXkuaXNBcnJheShBKT9BOltBXSx1LGksdCxvLHIsZixlLGMpLGguYmFzZT11Ll9fZSx1Ll9faD1udWxsLGguX19oLmxlbmd0aCYmZi5wdXNoKGgpLGImJihoLl9fRT1oLl9fPW51bGwpLGguX19lPSExfWVsc2UgbnVsbD09ciYmdS5fX3Y9PT1pLl9fdj8odS5fX2s9aS5fX2ssdS5fX2U9aS5fX2UpOnUuX19lPUwoaS5fX2UsdSxpLHQsbyxyLGYsYyk7KHM9bC5kaWZmZWQpJiZzKHUpfWNhdGNoKG4pe3UuX192PW51bGwsKGN8fG51bGwhPXIpJiYodS5fX2U9ZSx1Ll9faD0hIWMscltyLmluZGV4T2YoZSldPW51bGwpLGwuX19lKG4sdSxpKX19ZnVuY3Rpb24geihuLHUpe2wuX19jJiZsLl9fYyh1LG4pLG4uc29tZShmdW5jdGlvbih1KXt0cnl7bj11Ll9faCx1Ll9faD1bXSxuLnNvbWUoZnVuY3Rpb24obil7bi5jYWxsKHUpfSl9Y2F0Y2gobil7bC5fX2Uobix1Ll9fdil9fSl9ZnVuY3Rpb24gTChsLHUsaSx0LG8scixmLGMpe3ZhciBzLGEsdix5PWkucHJvcHMscD11LnByb3BzLGQ9dS50eXBlLF89MDtpZihcInN2Z1wiPT09ZCYmKG89ITApLG51bGwhPXIpZm9yKDtfPHIubGVuZ3RoO18rKylpZigocz1yW19dKSYmXCJzZXRBdHRyaWJ1dGVcImluIHM9PSEhZCYmKGQ/cy5sb2NhbE5hbWU9PT1kOjM9PT1zLm5vZGVUeXBlKSl7bD1zLHJbX109bnVsbDticmVha31pZihudWxsPT1sKXtpZihudWxsPT09ZClyZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocCk7bD1vP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsZCk6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChkLHAuaXMmJnApLHI9bnVsbCxjPSExfWlmKG51bGw9PT1kKXk9PT1wfHxjJiZsLmRhdGE9PT1wfHwobC5kYXRhPXApO2Vsc2V7aWYocj1yJiZuLmNhbGwobC5jaGlsZE5vZGVzKSxhPSh5PWkucHJvcHN8fGUpLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLHY9cC5kYW5nZXJvdXNseVNldElubmVySFRNTCwhYyl7aWYobnVsbCE9cilmb3IoeT17fSxfPTA7XzxsLmF0dHJpYnV0ZXMubGVuZ3RoO18rKyl5W2wuYXR0cmlidXRlc1tfXS5uYW1lXT1sLmF0dHJpYnV0ZXNbX10udmFsdWU7KHZ8fGEpJiYodiYmKGEmJnYuX19odG1sPT1hLl9faHRtbHx8di5fX2h0bWw9PT1sLmlubmVySFRNTCl8fChsLmlubmVySFRNTD12JiZ2Ll9faHRtbHx8XCJcIikpfWlmKEMobCxwLHksbyxjKSx2KXUuX19rPVtdO2Vsc2UgaWYoXz11LnByb3BzLmNoaWxkcmVuLHcobCxBcnJheS5pc0FycmF5KF8pP186W19dLHUsaSx0LG8mJlwiZm9yZWlnbk9iamVjdFwiIT09ZCxyLGYscj9yWzBdOmkuX19rJiZrKGksMCksYyksbnVsbCE9cilmb3IoXz1yLmxlbmd0aDtfLS07KW51bGwhPXJbX10mJmgocltfXSk7Y3x8KFwidmFsdWVcImluIHAmJnZvaWQgMCE9PShfPXAudmFsdWUpJiYoXyE9PWwudmFsdWV8fFwicHJvZ3Jlc3NcIj09PWQmJiFffHxcIm9wdGlvblwiPT09ZCYmXyE9PXkudmFsdWUpJiZIKGwsXCJ2YWx1ZVwiLF8seS52YWx1ZSwhMSksXCJjaGVja2VkXCJpbiBwJiZ2b2lkIDAhPT0oXz1wLmNoZWNrZWQpJiZfIT09bC5jaGVja2VkJiZIKGwsXCJjaGVja2VkXCIsXyx5LmNoZWNrZWQsITEpKX1yZXR1cm4gbH1mdW5jdGlvbiBNKG4sdSxpKXt0cnl7XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uKHUpOm4uY3VycmVudD11fWNhdGNoKG4pe2wuX19lKG4saSl9fWZ1bmN0aW9uIE4obix1LGkpe3ZhciB0LG87aWYobC51bm1vdW50JiZsLnVubW91bnQobiksKHQ9bi5yZWYpJiYodC5jdXJyZW50JiZ0LmN1cnJlbnQhPT1uLl9fZXx8TSh0LG51bGwsdSkpLG51bGwhPSh0PW4uX19jKSl7aWYodC5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7dC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKG4pe2wuX19lKG4sdSl9dC5iYXNlPXQuX19QPW51bGx9aWYodD1uLl9faylmb3Iobz0wO288dC5sZW5ndGg7bysrKXRbb10mJk4odFtvXSx1LFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4udHlwZSk7aXx8bnVsbD09bi5fX2V8fGgobi5fX2UpLG4uX19lPW4uX19kPXZvaWQgMH1mdW5jdGlvbiBPKG4sbCx1KXtyZXR1cm4gdGhpcy5jb25zdHJ1Y3RvcihuLHUpfWZ1bmN0aW9uIFModSxpLHQpe3ZhciBvLHIsZjtsLl9fJiZsLl9fKHUsaSkscj0obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0KT9udWxsOnQmJnQuX19rfHxpLl9fayxmPVtdLGooaSx1PSghbyYmdHx8aSkuX19rPXYoZCxudWxsLFt1XSkscnx8ZSxlLHZvaWQgMCE9PWkub3duZXJTVkdFbGVtZW50LCFvJiZ0P1t0XTpyP251bGw6aS5maXJzdENoaWxkP24uY2FsbChpLmNoaWxkTm9kZXMpOm51bGwsZiwhbyYmdD90OnI/ci5fX2U6aS5maXJzdENoaWxkLG8pLHooZix1KX1mdW5jdGlvbiBxKG4sbCl7UyhuLGwscSl9ZnVuY3Rpb24gQihsLHUsaSl7dmFyIHQsbyxyLGY9YSh7fSxsLnByb3BzKTtmb3IociBpbiB1KVwia2V5XCI9PXI/dD11W3JdOlwicmVmXCI9PXI/bz11W3JdOmZbcl09dVtyXTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4yJiYoZi5jaGlsZHJlbj1hcmd1bWVudHMubGVuZ3RoPjM/bi5jYWxsKGFyZ3VtZW50cywyKTppKSx5KGwudHlwZSxmLHR8fGwua2V5LG98fGwucmVmLG51bGwpfWZ1bmN0aW9uIEQobixsKXt2YXIgdT17X19jOmw9XCJfX2NDXCIrZisrLF9fOm4sQ29uc3VtZXI6ZnVuY3Rpb24obixsKXtyZXR1cm4gbi5jaGlsZHJlbihsKX0sUHJvdmlkZXI6ZnVuY3Rpb24obil7dmFyIHUsaTtyZXR1cm4gdGhpcy5nZXRDaGlsZENvbnRleHR8fCh1PVtdLChpPXt9KVtsXT10aGlzLHRoaXMuZ2V0Q2hpbGRDb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIGl9LHRoaXMuc2hvdWxkQ29tcG9uZW50VXBkYXRlPWZ1bmN0aW9uKG4pe3RoaXMucHJvcHMudmFsdWUhPT1uLnZhbHVlJiZ1LnNvbWUobSl9LHRoaXMuc3ViPWZ1bmN0aW9uKG4pe3UucHVzaChuKTt2YXIgbD1uLmNvbXBvbmVudFdpbGxVbm1vdW50O24uY29tcG9uZW50V2lsbFVubW91bnQ9ZnVuY3Rpb24oKXt1LnNwbGljZSh1LmluZGV4T2YobiksMSksbCYmbC5jYWxsKG4pfX0pLG4uY2hpbGRyZW59fTtyZXR1cm4gdS5Qcm92aWRlci5fXz11LkNvbnN1bWVyLmNvbnRleHRUeXBlPXV9bj1jLnNsaWNlLGw9e19fZTpmdW5jdGlvbihuLGwpe2Zvcih2YXIgdSxpLHQ7bD1sLl9fOylpZigodT1sLl9fYykmJiF1Ll9fKXRyeXtpZigoaT11LmNvbnN0cnVjdG9yKSYmbnVsbCE9aS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3ImJih1LnNldFN0YXRlKGkuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKG4pKSx0PXUuX19kKSxudWxsIT11LmNvbXBvbmVudERpZENhdGNoJiYodS5jb21wb25lbnREaWRDYXRjaChuKSx0PXUuX19kKSx0KXJldHVybiB1Ll9fRT11fWNhdGNoKGwpe249bH10aHJvdyBufX0sdT0wLGk9ZnVuY3Rpb24obil7cmV0dXJuIG51bGwhPW4mJnZvaWQgMD09PW4uY29uc3RydWN0b3J9LF8ucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKG4sbCl7dmFyIHU7dT1udWxsIT10aGlzLl9fcyYmdGhpcy5fX3MhPT10aGlzLnN0YXRlP3RoaXMuX19zOnRoaXMuX19zPWEoe30sdGhpcy5zdGF0ZSksXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmKG49bihhKHt9LHUpLHRoaXMucHJvcHMpKSxuJiZhKHUsbiksbnVsbCE9biYmdGhpcy5fX3YmJihsJiZ0aGlzLl9faC5wdXNoKGwpLG0odGhpcykpfSxfLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihuKXt0aGlzLl9fdiYmKHRoaXMuX19lPSEwLG4mJnRoaXMuX19oLnB1c2gobiksbSh0aGlzKSl9LF8ucHJvdG90eXBlLnJlbmRlcj1kLHQ9W10sbz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm9taXNlP1Byb21pc2UucHJvdG90eXBlLnRoZW4uYmluZChQcm9taXNlLnJlc29sdmUoKSk6c2V0VGltZW91dCxnLl9fcj0wLGY9MDtleHBvcnR7UyBhcyByZW5kZXIscSBhcyBoeWRyYXRlLHYgYXMgY3JlYXRlRWxlbWVudCx2IGFzIGgsZCBhcyBGcmFnbWVudCxwIGFzIGNyZWF0ZVJlZixpIGFzIGlzVmFsaWRFbGVtZW50LF8gYXMgQ29tcG9uZW50LEIgYXMgY2xvbmVFbGVtZW50LEQgYXMgY3JlYXRlQ29udGV4dCxBIGFzIHRvQ2hpbGRBcnJheSxsIGFzIG9wdGlvbnN9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJlYWN0Lm1vZHVsZS5qcy5tYXBcbiIsImltcG9ydHtvcHRpb25zIGFzIG59ZnJvbVwicHJlYWN0XCI7dmFyIHQsdSxyLG89MCxpPVtdLGM9bi5fX2IsZj1uLl9fcixlPW4uZGlmZmVkLGE9bi5fX2Msdj1uLnVubW91bnQ7ZnVuY3Rpb24gbSh0LHIpe24uX19oJiZuLl9faCh1LHQsb3x8ciksbz0wO3ZhciBpPXUuX19IfHwodS5fX0g9e19fOltdLF9faDpbXX0pO3JldHVybiB0Pj1pLl9fLmxlbmd0aCYmaS5fXy5wdXNoKHt9KSxpLl9fW3RdfWZ1bmN0aW9uIGwobil7cmV0dXJuIG89MSxwKHcsbil9ZnVuY3Rpb24gcChuLHIsbyl7dmFyIGk9bSh0KyssMik7cmV0dXJuIGkudD1uLGkuX19jfHwoaS5fXz1bbz9vKHIpOncodm9pZCAwLHIpLGZ1bmN0aW9uKG4pe3ZhciB0PWkudChpLl9fWzBdLG4pO2kuX19bMF0hPT10JiYoaS5fXz1bdCxpLl9fWzFdXSxpLl9fYy5zZXRTdGF0ZSh7fSkpfV0saS5fX2M9dSksaS5fX31mdW5jdGlvbiB5KHIsbyl7dmFyIGk9bSh0KyssMyk7IW4uX19zJiZrKGkuX19ILG8pJiYoaS5fXz1yLGkuX19IPW8sdS5fX0guX19oLnB1c2goaSkpfWZ1bmN0aW9uIGgocixvKXt2YXIgaT1tKHQrKyw0KTshbi5fX3MmJmsoaS5fX0gsbykmJihpLl9fPXIsaS5fX0g9byx1Ll9faC5wdXNoKGkpKX1mdW5jdGlvbiBzKG4pe3JldHVybiBvPTUsZChmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om59fSxbXSl9ZnVuY3Rpb24gXyhuLHQsdSl7bz02LGgoZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24odCgpKTpuJiYobi5jdXJyZW50PXQoKSl9LG51bGw9PXU/dTp1LmNvbmNhdChuKSl9ZnVuY3Rpb24gZChuLHUpe3ZhciByPW0odCsrLDcpO3JldHVybiBrKHIuX19ILHUpJiYoci5fXz1uKCksci5fX0g9dSxyLl9faD1uKSxyLl9ffWZ1bmN0aW9uIEEobix0KXtyZXR1cm4gbz04LGQoZnVuY3Rpb24oKXtyZXR1cm4gbn0sdCl9ZnVuY3Rpb24gRihuKXt2YXIgcj11LmNvbnRleHRbbi5fX2NdLG89bSh0KyssOSk7cmV0dXJuIG8uYz1uLHI/KG51bGw9PW8uX18mJihvLl9fPSEwLHIuc3ViKHUpKSxyLnByb3BzLnZhbHVlKTpuLl9ffWZ1bmN0aW9uIFQodCx1KXtuLnVzZURlYnVnVmFsdWUmJm4udXNlRGVidWdWYWx1ZSh1P3UodCk6dCl9ZnVuY3Rpb24gcShuKXt2YXIgcj1tKHQrKywxMCksbz1sKCk7cmV0dXJuIHIuX189bix1LmNvbXBvbmVudERpZENhdGNofHwodS5jb21wb25lbnREaWRDYXRjaD1mdW5jdGlvbihuKXtyLl9fJiZyLl9fKG4pLG9bMV0obil9KSxbb1swXSxmdW5jdGlvbigpe29bMV0odm9pZCAwKX1dfWZ1bmN0aW9uIHgoKXtmb3IodmFyIHQ7dD1pLnNoaWZ0KCk7KWlmKHQuX19QKXRyeXt0Ll9fSC5fX2guZm9yRWFjaChnKSx0Ll9fSC5fX2guZm9yRWFjaChqKSx0Ll9fSC5fX2g9W119Y2F0Y2godSl7dC5fX0guX19oPVtdLG4uX19lKHUsdC5fX3YpfX1uLl9fYj1mdW5jdGlvbihuKXt1PW51bGwsYyYmYyhuKX0sbi5fX3I9ZnVuY3Rpb24obil7ZiYmZihuKSx0PTA7dmFyIHI9KHU9bi5fX2MpLl9fSDtyJiYoci5fX2guZm9yRWFjaChnKSxyLl9faC5mb3JFYWNoKGopLHIuX19oPVtdKX0sbi5kaWZmZWQ9ZnVuY3Rpb24odCl7ZSYmZSh0KTt2YXIgbz10Ll9fYztvJiZvLl9fSCYmby5fX0guX19oLmxlbmd0aCYmKDEhPT1pLnB1c2gobykmJnI9PT1uLnJlcXVlc3RBbmltYXRpb25GcmFtZXx8KChyPW4ucmVxdWVzdEFuaW1hdGlvbkZyYW1lKXx8ZnVuY3Rpb24obil7dmFyIHQsdT1mdW5jdGlvbigpe2NsZWFyVGltZW91dChyKSxiJiZjYW5jZWxBbmltYXRpb25GcmFtZSh0KSxzZXRUaW1lb3V0KG4pfSxyPXNldFRpbWVvdXQodSwxMDApO2ImJih0PXJlcXVlc3RBbmltYXRpb25GcmFtZSh1KSl9KSh4KSksdT1udWxsfSxuLl9fYz1mdW5jdGlvbih0LHUpe3Uuc29tZShmdW5jdGlvbih0KXt0cnl7dC5fX2guZm9yRWFjaChnKSx0Ll9faD10Ll9faC5maWx0ZXIoZnVuY3Rpb24obil7cmV0dXJuIW4uX198fGoobil9KX1jYXRjaChyKXt1LnNvbWUoZnVuY3Rpb24obil7bi5fX2gmJihuLl9faD1bXSl9KSx1PVtdLG4uX19lKHIsdC5fX3YpfX0pLGEmJmEodCx1KX0sbi51bm1vdW50PWZ1bmN0aW9uKHQpe3YmJnYodCk7dmFyIHUscj10Ll9fYztyJiZyLl9fSCYmKHIuX19ILl9fLmZvckVhY2goZnVuY3Rpb24obil7dHJ5e2cobil9Y2F0Y2gobil7dT1ufX0pLHUmJm4uX19lKHUsci5fX3YpKX07dmFyIGI9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lO2Z1bmN0aW9uIGcobil7dmFyIHQ9dSxyPW4uX19jO1wiZnVuY3Rpb25cIj09dHlwZW9mIHImJihuLl9fYz12b2lkIDAscigpKSx1PXR9ZnVuY3Rpb24gaihuKXt2YXIgdD11O24uX19jPW4uX18oKSx1PXR9ZnVuY3Rpb24gayhuLHQpe3JldHVybiFufHxuLmxlbmd0aCE9PXQubGVuZ3RofHx0LnNvbWUoZnVuY3Rpb24odCx1KXtyZXR1cm4gdCE9PW5bdV19KX1mdW5jdGlvbiB3KG4sdCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdD90KG4pOnR9ZXhwb3J0e2wgYXMgdXNlU3RhdGUscCBhcyB1c2VSZWR1Y2VyLHkgYXMgdXNlRWZmZWN0LGggYXMgdXNlTGF5b3V0RWZmZWN0LHMgYXMgdXNlUmVmLF8gYXMgdXNlSW1wZXJhdGl2ZUhhbmRsZSxkIGFzIHVzZU1lbW8sQSBhcyB1c2VDYWxsYmFjayxGIGFzIHVzZUNvbnRleHQsVCBhcyB1c2VEZWJ1Z1ZhbHVlLHEgYXMgdXNlRXJyb3JCb3VuZGFyeX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob29rcy5tb2R1bGUuanMubWFwXG4iLCJpbXBvcnR7b3B0aW9ucyBhcyByLEZyYWdtZW50IGFzIF99ZnJvbVwicHJlYWN0XCI7ZXhwb3J0e0ZyYWdtZW50fWZyb21cInByZWFjdFwiO3ZhciBvPTA7ZnVuY3Rpb24gZShfLGUsbix0LGYpe3ZhciBsLHMsdT17fTtmb3IocyBpbiBlKVwicmVmXCI9PXM/bD1lW3NdOnVbc109ZVtzXTt2YXIgYT17dHlwZTpfLHByb3BzOnUsa2V5Om4scmVmOmwsX19rOm51bGwsX186bnVsbCxfX2I6MCxfX2U6bnVsbCxfX2Q6dm9pZCAwLF9fYzpudWxsLF9faDpudWxsLGNvbnN0cnVjdG9yOnZvaWQgMCxfX3Y6LS1vLF9fc291cmNlOnQsX19zZWxmOmZ9O2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIF8mJihsPV8uZGVmYXVsdFByb3BzKSlmb3IocyBpbiBsKXZvaWQgMD09PXVbc10mJih1W3NdPWxbc10pO3JldHVybiByLnZub2RlJiZyLnZub2RlKGEpLGF9ZXhwb3J0e2UgYXMganN4LGUgYXMganN4cyxlIGFzIGpzeERFVn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc3hSdW50aW1lLm1vZHVsZS5qcy5tYXBcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9wb3B1cC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3BvcHVwLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLnNldERhdGEgPSBleHBvcnRzLmdldERhdGEgPSB2b2lkIDA7XHJcbmZ1bmN0aW9uIGdldERhdGEoa2V5cykge1xyXG4gICAgLy9AdHMtaWdub3JlXHJcbiAgICByZXR1cm4gYnJvd3Nlci5zdG9yYWdlLmxvY2FsLmdldChrZXlzKTtcclxufVxyXG5leHBvcnRzLmdldERhdGEgPSBnZXREYXRhO1xyXG5mdW5jdGlvbiBzZXREYXRhKGRhdGEpIHtcclxuICAgIC8vQHRzLWlnbm9yZVxyXG4gICAgcmV0dXJuIGJyb3dzZXIuc3RvcmFnZS5sb2NhbC5zZXQoZGF0YSk7XHJcbn1cclxuZXhwb3J0cy5zZXREYXRhID0gc2V0RGF0YTtcclxuIiwiLy8gQHRzLW5vY2hlY2tcclxuXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcclxuICAgIHZhciB0ID0ge307XHJcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcclxuICAgICAgICB0W3BdID0gc1twXTtcclxuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcclxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xyXG4gICAgICAgIH1cclxuICAgIHJldHVybiB0O1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuVG9nZ2xlU3dpdGNoID0gZXhwb3J0cy5UZXh0SW5wdXQgPSBleHBvcnRzLkJ1dHRvbiA9IGV4cG9ydHMuQWxlcnQgPSB2b2lkIDA7XHJcbmNvbnN0IGpzeF9ydW50aW1lXzEgPSByZXF1aXJlKFwicHJlYWN0L2pzeC1ydW50aW1lXCIpO1xyXG5jb25zdCBob29rc18xID0gcmVxdWlyZShcInByZWFjdC9ob29rc1wiKTtcclxuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcclxuY29uc3QgQWxlcnQgPSAoX2EpID0+IHtcclxuICAgIHZhciB7IGNvbG9yLCBoaWRkZW4gfSA9IF9hLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wiY29sb3JcIiwgXCJoaWRkZW5cIl0pO1xyXG4gICAgY29uc3QgW2lzSGlkZGVuLCBzZXRJc0hpZGRlbl0gPSAoMCwgaG9va3NfMS51c2VTdGF0ZSkoZmFsc2UpO1xyXG4gICAgKDAsIGhvb2tzXzEudXNlRWZmZWN0KSgoKSA9PiB7XHJcbiAgICAgICAgc2V0SXNIaWRkZW4oaGlkZGVuKTtcclxuICAgIH0sIFtoaWRkZW5dKTtcclxuICAgICgwLCBob29rc18xLnVzZUVmZmVjdCkoKCkgPT4ge1xyXG4gICAgICAgIGlmICghaXNIaWRkZW4pIHtcclxuICAgICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAoMCwgdXRpbHNfMS5kZWJvdW5jZSkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgc2V0SXNIaWRkZW4odHJ1ZSk7XHJcbiAgICAgICAgICAgIH0sIDE1MDApO1xyXG4gICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgIH1cclxuICAgIH0sIFtpc0hpZGRlbl0pO1xyXG4gICAgZnVuY3Rpb24gb25DbGljaygpIHtcclxuICAgICAgICBzZXRJc0hpZGRlbih0cnVlKTtcclxuICAgIH1cclxuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4cykoXCJkaXZcIiwgT2JqZWN0LmFzc2lnbih7IGNsYXNzOiBgYWxlcnQgYWxlcnQtJHtjb2xvcn0gYWxlcnQtZGlzbWlzc2libGUgZmFkZSBzaG93IGZpeGVkLXRvcCBteC00ICR7aXNIaWRkZW4gPyBcImhpZGRlblwiIDogXCJcIn1gLCByb2xlOiBcImFsZXJ0XCIgfSwgeyBjaGlsZHJlbjogW3Byb3BzLmNoaWxkcmVuLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiYnV0dG9uXCIsIHsgdHlwZTogXCJidXR0b25cIiwgY2xhc3M6IFwiYnRuLWNsb3NlXCIsIFwiZGF0YS1icy1kaXNtaXNzXCI6IFwiYWxlcnRcIiwgXCJhcmlhLWxhYmVsXCI6IFwiQ2xvc2VcIiwgb25DbGljazogKGUpID0+IG9uQ2xpY2soZSkgfSldIH0pKSk7XHJcbn07XHJcbmV4cG9ydHMuQWxlcnQgPSBBbGVydDtcclxuY29uc3QgQnV0dG9uID0gKF9hKSA9PiB7XHJcbiAgICB2YXIgeyBjb2xvciA9IFwicHJpbWFyeVwiLCBvbkNsaWNrIH0gPSBfYSwgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcImNvbG9yXCIsIFwib25DbGlja1wiXSk7XHJcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJidXR0b25cIiwgT2JqZWN0LmFzc2lnbih7IGNsYXNzOiBgYnRuIGJ0bi0ke2NvbG9yfSBidG4tc21gLCB0eXBlOiBcImJ1dHRvblwiLCBvbkNsaWNrOiAoZSkgPT4ge1xyXG4gICAgICAgICAgICBvbkNsaWNrKGUpO1xyXG4gICAgICAgIH0gfSwgeyBjaGlsZHJlbjogcHJvcHMuY2hpbGRyZW4gfSkpKTtcclxufTtcclxuZXhwb3J0cy5CdXR0b24gPSBCdXR0b247XHJcbmNvbnN0IFRleHRJbnB1dCA9ICh7IG9uSW5wdXQsIHZhbHVlLCBkaXNhYmxlZCA9IGZhbHNlIH0pID0+IHtcclxuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImlucHV0XCIsIHsgY2xhc3M6IFwiZm9ybS1jb250cm9sXCIsIHR5cGU6IFwidGV4dFwiLCB2YWx1ZTogdmFsdWUsIG9uSW5wdXQ6IChlKSA9PiBvbklucHV0KGUpLCBkaXNhYmxlZDogZGlzYWJsZWQgfSkpO1xyXG59O1xyXG5leHBvcnRzLlRleHRJbnB1dCA9IFRleHRJbnB1dDtcclxuY29uc3QgVG9nZ2xlU3dpdGNoID0gKHsgb25DaGFuZ2UsIGRpc2FibGVkID0gZmFsc2UsIGlzT24gPSBmYWxzZSB9KSA9PiB7XHJcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJkaXZcIiwgT2JqZWN0LmFzc2lnbih7IGNsYXNzOiBcImZvcm0tY2hlY2sgZm9ybS1zd2l0Y2hcIiB9LCB7IGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiaW5wdXRcIiwgeyBjbGFzczogXCJmb3JtLWNoZWNrLWlucHV0XCIsIHR5cGU6IFwiY2hlY2tib3hcIiwgY2hlY2tlZDogaXNPbiwgb25DaGFuZ2U6IChlKSA9PiBvbkNoYW5nZShlKSwgZGlzYWJsZWQ6IGRpc2FibGVkIH0pIH0pKSk7XHJcbn07XHJcbmV4cG9ydHMuVG9nZ2xlU3dpdGNoID0gVG9nZ2xlU3dpdGNoO1xyXG4iLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLkZpbHRlciA9IHZvaWQgMDtcclxuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJwcmVhY3QvanN4LXJ1bnRpbWVcIik7XHJcbmNvbnN0IGhvb2tzXzEgPSByZXF1aXJlKFwicHJlYWN0L2hvb2tzXCIpO1xyXG5jb25zdCBDb21wb25lbnRzXzEgPSByZXF1aXJlKFwiLi9Db21wb25lbnRzXCIpO1xyXG5jb25zdCBGaWx0ZXIgPSAoeyBpZCwgaXNPbiwgc2V0Q3VycmVudE9uLCBkYXR1bU9wZXJhdGlvbiB9KSA9PiB7XHJcbiAgICBjb25zdCBbaXNFZGl0LCBzZXRJc0VkaXRdID0gKDAsIGhvb2tzXzEudXNlU3RhdGUpKGZhbHNlKTtcclxuICAgIGNvbnN0IFt0ZXh0LCBzZXRUZXh0XSA9ICgwLCBob29rc18xLnVzZVN0YXRlKShcIlwiKTtcclxuICAgIGNvbnN0IFtpc1RvZ2dsYWJsZSwgc2V0SXNUb2dnbGFibGVdID0gKDAsIGhvb2tzXzEudXNlU3RhdGUpKGZhbHNlKTtcclxuICAgICgwLCBob29rc18xLnVzZUVmZmVjdCkoKCkgPT4ge1xyXG4gICAgICAgIHNldFRleHQoZGF0dW1PcGVyYXRpb24oXCJnZXRcIiwgeyBpZDogaWQgfSkudGV4dCk7XHJcbiAgICB9LCBbXSk7XHJcbiAgICAoMCwgaG9va3NfMS51c2VFZmZlY3QpKCgpID0+IHtcclxuICAgICAgICBzZXRJc1RvZ2dsYWJsZSh0ZXh0ID8gdHJ1ZSA6IGZhbHNlKTtcclxuICAgIH0sIFt0ZXh0XSk7XHJcbiAgICBmdW5jdGlvbiBidXR0b25DbGljaygpIHtcclxuICAgICAgICBpZiAoaXNFZGl0KSB7XHJcbiAgICAgICAgICAgIHNldEN1cnJlbnRPbih0ZXh0ID8gaWQgOiBudWxsKTtcclxuICAgICAgICAgICAgc2V0SXNFZGl0KGZhbHNlKTtcclxuICAgICAgICAgICAgZGF0dW1PcGVyYXRpb24oXCJwYXRjaFwiLCB7IGlkOiBpZCwgZGF0dW06IHsgdGV4dDogdGV4dCB9IH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgc2V0SXNFZGl0KHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHRleHRJbnB1dEVudGVyKGUpIHtcclxuICAgICAgICBzZXRUZXh0KGUudGFyZ2V0LnZhbHVlKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGNsb3NlQnV0dG9uQ2xpY2soKSB7XHJcbiAgICAgICAgZGF0dW1PcGVyYXRpb24oXCJkZWxldGVcIiwgeyBpZDogaWQgfSk7XHJcbiAgICAgICAgaWYgKGlzT24pIHtcclxuICAgICAgICAgICAgc2V0Q3VycmVudE9uKG51bGwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHRvZ2dsZUNoYW5nZShlKSB7XHJcbiAgICAgICAgaWYgKGUudGFyZ2V0LmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgc2V0Q3VycmVudE9uKGlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGUudGFyZ2V0LmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgc2V0Q3VycmVudE9uKG51bGwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4cykoXCJmb3JtXCIsIE9iamVjdC5hc3NpZ24oeyBjbGFzczogXCJyb3cgYWxpZ24taXRlbXMtY2VudGVyXCIgfSwgeyBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJkaXZcIiwgT2JqZWN0LmFzc2lnbih7IGNsYXNzOiBcImNvbC0zXCIgfSwgeyBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShDb21wb25lbnRzXzEuQnV0dG9uLCBPYmplY3QuYXNzaWduKHsgb25DbGljazogYnV0dG9uQ2xpY2sgfSwgeyBjaGlsZHJlbjogaXNFZGl0ID8gXCJTYXZlXCIgOiBcIkVkaXRcIiB9KSkgfSkpLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiZGl2XCIsIE9iamVjdC5hc3NpZ24oeyBjbGFzczogXCJjb2wtNVwiIH0sIHsgY2hpbGRyZW46ICgwLCBqc3hfcnVudGltZV8xLmpzeCkoQ29tcG9uZW50c18xLlRleHRJbnB1dCwgeyB2YWx1ZTogdGV4dCwgb25JbnB1dDogdGV4dElucHV0RW50ZXIsIGRpc2FibGVkOiBpc0VkaXQgPyBmYWxzZSA6IHRydWUgfSkgfSkpLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiZGl2XCIsIE9iamVjdC5hc3NpZ24oeyBjbGFzczogXCJjb2wtMiBkLWZsZXgganVzdGlmeS1jb250ZW50LWVuZFwiIH0sIHsgY2hpbGRyZW46IGlzRWRpdCA/IChcIlwiKSA6ICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKENvbXBvbmVudHNfMS5CdXR0b24sIE9iamVjdC5hc3NpZ24oeyBjb2xvcjogXCJkYW5nZXJcIiwgb25DbGljazogY2xvc2VCdXR0b25DbGljayB9LCB7IGNoaWxkcmVuOiBcIlhcIiB9KSkpIH0pKSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCBPYmplY3QuYXNzaWduKHsgY2xhc3M6IFwiY29sLTIgZC1mbGV4IGp1c3RpZnktY29udGVudC1lbmRcIiB9LCB7IGNoaWxkcmVuOiBpc0VkaXQgPyAoXCJcIikgOiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShDb21wb25lbnRzXzEuVG9nZ2xlU3dpdGNoLCB7IG9uQ2hhbmdlOiB0b2dnbGVDaGFuZ2UsIGlzT246IHRleHQgJiYgaXNPbiwgZGlzYWJsZWQ6ICFpc1RvZ2dsYWJsZSB9KSkgfSkpXSB9KSkpO1xyXG59O1xyXG5leHBvcnRzLkZpbHRlciA9IEZpbHRlcjtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5kZWJvdW5jZSA9IHZvaWQgMDtcclxuZnVuY3Rpb24gZGVib3VuY2UoZnVuYywgdGltZXIgPSA1MDApIHtcclxuICAgIGxldCB0aW1lb3V0O1xyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICBmdW5jKCk7XHJcbiAgICAgICAgfSwgdGltZXIpO1xyXG4gICAgfTtcclxufVxyXG5leHBvcnRzLmRlYm91bmNlID0gZGVib3VuY2U7XHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCBqc3hfcnVudGltZV8xID0gcmVxdWlyZShcInByZWFjdC9qc3gtcnVudGltZVwiKTtcclxuY29uc3QgcHJlYWN0XzEgPSByZXF1aXJlKFwicHJlYWN0XCIpO1xyXG5jb25zdCBob29rc18xID0gcmVxdWlyZShcInByZWFjdC9ob29rc1wiKTtcclxucmVxdWlyZShcIi4vcG9wdXAuY3NzXCIpO1xyXG5jb25zdCBDb21wb25lbnRzXzEgPSByZXF1aXJlKFwiLi9Db21wb25lbnRzXCIpO1xyXG5jb25zdCBGaWx0ZXJfMSA9IHJlcXVpcmUoXCIuL0ZpbHRlclwiKTtcclxuY29uc3QgZGF0YUhhbmRsZXJfMSA9IHJlcXVpcmUoXCIuLi9kYXRhSGFuZGxlclwiKTtcclxuY29uc3QgbmV3RGF0dW0gPSB7XHJcbiAgICB0ZXh0OiBcIlwiLFxyXG59O1xyXG5jb25zdCBQb3B1cCA9ICgpID0+IHtcclxuICAgIGNvbnN0IFtyb3dzLCBzZXRSb3dzXSA9ICgwLCBob29rc18xLnVzZVN0YXRlKShbXSk7XHJcbiAgICBjb25zdCBbY3VycmVudE9uLCBzZXRDdXJyZW50T25dID0gKDAsIGhvb2tzXzEudXNlU3RhdGUpKG51bGwpO1xyXG4gICAgY29uc3QgW2FsZXJ0LCBzZXRBbGVydF0gPSAoMCwgaG9va3NfMS51c2VTdGF0ZSkoe1xyXG4gICAgICAgIHRleHQ6IFwiXCIsXHJcbiAgICAgICAgaGlkZGVuOiB0cnVlLFxyXG4gICAgICAgIGNvbG9yOiBcInByaW1hcnlcIixcclxuICAgIH0pO1xyXG4gICAgKDAsIGhvb2tzXzEudXNlRWZmZWN0KSgoKSA9PiB7XHJcbiAgICAgICAgKDAsIGRhdGFIYW5kbGVyXzEuZ2V0RGF0YSkoeyByb3dzOiBbXSwgY3VycmVudE9uOiBudWxsIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgIHNldFJvd3MoZGF0YS5yb3dzKTtcclxuICAgICAgICAgICAgc2V0Q3VycmVudE9uKGRhdGEuY3VycmVudE9uKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgIHNldEFsZXJ0KHsgdGV4dDogYEVycm9yOiAke2Vycm9yfWAsIGhpZGRlbjogZmFsc2UsIGNvbG9yOiBcImRhbmdlclwiIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSwgW10pO1xyXG4gICAgKDAsIGhvb2tzXzEudXNlRWZmZWN0KSgoKSA9PiB7XHJcbiAgICAgICAgKDAsIGRhdGFIYW5kbGVyXzEuc2V0RGF0YSkoeyByb3dzOiByb3dzLCBjdXJyZW50T246IGN1cnJlbnRPbiB9KVxyXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU2F2ZWQuXCIpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgc2V0QWxlcnQoeyB0ZXh0OiBgRXJyb3I6ICR7ZXJyb3J9YCwgaGlkZGVuOiBmYWxzZSwgY29sb3I6IFwiZGFuZ2VyXCIgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LCBbcm93cywgY3VycmVudE9uXSk7XHJcbiAgICAoMCwgaG9va3NfMS51c2VFZmZlY3QpKCgpID0+IHtcclxuICAgICAgICAvL0B0cy1pZ25vcmVcclxuICAgICAgICBsZXQgcXVlcnlpbmcgPSBicm93c2VyLnRhYnMucXVlcnkoeyBjdXJyZW50V2luZG93OiB0cnVlLCBhY3RpdmU6IHRydWUgfSk7XHJcbiAgICAgICAgY29uc3QgY3JlYXRlTWVzc2FnZSA9ICgpID0+IHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjdXJyZW50T24gPT0gXCJudW1iZXJcIiAmJiByb3dzW2N1cnJlbnRPbl0udGV4dCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgdGFzazogXCJtdXRhdGVcIiwgZmlsdGVyOiByb3dzW2N1cnJlbnRPbl0udGV4dCB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgdGFzazogXCJyZXNldFwiIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHF1ZXJ5aW5nXHJcbiAgICAgICAgICAgIC50aGVuKCh0YWJzKSA9PiB7XHJcbiAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICBicm93c2VyLnRhYnMuc2VuZE1lc3NhZ2UodGFic1swXS5pZCwgY3JlYXRlTWVzc2FnZSgpKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgIHNldEFsZXJ0KHsgdGV4dDogYEVycm9yOiAke2Vycm9yfWAsIGhpZGRlbjogZmFsc2UsIGNvbG9yOiBcImRhbmdlclwiIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSwgW3Jvd3MsIGN1cnJlbnRPbl0pO1xyXG4gICAgZnVuY3Rpb24gZGF0dW1PcGVyYXRpb24odGFzaywgb3B0aW9ucykge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1Jvd3MgPSBbLi4ucm93c107XHJcbiAgICAgICAgICAgIGlmICh0YXNrID09IFwicG9zdFwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocm93cy5sZW5ndGggPCAxMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1Jvd3MgPSBbLi4ucm93c107XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3Um93cy5wdXNoKG9wdGlvbnMuZGF0dW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFJvd3MobmV3Um93cyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodGFzayA9PSBcImdldFwiKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3Um93c1tvcHRpb25zLmlkXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICh0YXNrID09IFwicGF0Y2hcIikge1xyXG4gICAgICAgICAgICAgICAgbmV3Um93c1tvcHRpb25zLmlkXSA9IG9wdGlvbnMuZGF0dW07XHJcbiAgICAgICAgICAgICAgICBzZXRSb3dzKG5ld1Jvd3MpO1xyXG4gICAgICAgICAgICAgICAgc2V0QWxlcnQoeyB0ZXh0OiBcIlNhdmVkLlwiLCBoaWRkZW46IGZhbHNlLCBjb2xvcjogXCJzdWNjZXNzXCIgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodGFzayA9PSBcImRlbGV0ZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdSb3dzLnNwbGljZShvcHRpb25zLmlkLCAxKTtcclxuICAgICAgICAgICAgICAgIHNldFJvd3MobmV3Um93cyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHNldEFsZXJ0KHsgdGV4dDogYEVycm9yOiAke2Vycm9yfWAsIGhpZGRlbjogZmFsc2UsIGNvbG9yOiBcImRhbmdlclwiIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4cykoXCJkaXZcIiwgT2JqZWN0LmFzc2lnbih7IGlkOiBcInBvcHVwXCIsIGNsYXNzOiBcImNvbnRhaW5lciBwLTMgb3ZlcmZsb3ctYXV0b1wiIH0sIHsgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKENvbXBvbmVudHNfMS5BbGVydCwgT2JqZWN0LmFzc2lnbih7IGNvbG9yOiBhbGVydC5jb2xvciwgaGlkZGVuOiBhbGVydC5oaWRkZW4gfSwgeyBjaGlsZHJlbjogYWxlcnQudGV4dCB9KSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJoMVwiLCBPYmplY3QuYXNzaWduKHsgY2xhc3M6IFwibWItMVwiIH0sIHsgY2hpbGRyZW46IFwiRm94eS1wYW5nb2xpbnNcIiB9KSksIHJvd3MubWFwKChkYXR1bSwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShGaWx0ZXJfMS5GaWx0ZXIsIHsgaWQ6IGluZGV4LCBpc09uOiBpbmRleCA9PSBjdXJyZW50T24sIHNldEN1cnJlbnRPbjogc2V0Q3VycmVudE9uLCBkYXR1bU9wZXJhdGlvbjogZGF0dW1PcGVyYXRpb24gfSkpO1xyXG4gICAgICAgICAgICB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCB7IGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKENvbXBvbmVudHNfMS5CdXR0b24sIE9iamVjdC5hc3NpZ24oeyBvbkNsaWNrOiAoKSA9PiBkYXR1bU9wZXJhdGlvbihcInBvc3RcIiwgeyBkYXR1bTogbmV3RGF0dW0gfSkgfSwgeyBjaGlsZHJlbjogXCJBZGQgRmlsdGVyXCIgfSkpIH0pXSB9KSkpO1xyXG59O1xyXG4oMCwgcHJlYWN0XzEucmVuZGVyKSgoMCwganN4X3J1bnRpbWVfMS5qc3gpKFBvcHVwLCB7fSksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXBwXCIpKTtcclxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsIm4iLCJsIiwidSIsInQiLCJvIiwiciIsImYiLCJlIiwiYyIsInMiLCJhIiwiaCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInYiLCJhcmd1bWVudHMiLCJjaGlsZHJlbiIsImNhbGwiLCJkZWZhdWx0UHJvcHMiLCJ5IiwidHlwZSIsInByb3BzIiwia2V5IiwicmVmIiwiX19rIiwiX18iLCJfX2IiLCJfX2UiLCJfX2QiLCJfX2MiLCJfX2giLCJjb25zdHJ1Y3RvciIsIl9fdiIsInZub2RlIiwicCIsImN1cnJlbnQiLCJkIiwiXyIsImNvbnRleHQiLCJpbmRleE9mIiwiYiIsImJhc2UiLCJtIiwiZyIsIl9fciIsImRlYm91bmNlUmVuZGVyaW5nIiwic29ydCIsInNvbWUiLCJfX1AiLCJqIiwiX19uIiwib3duZXJTVkdFbGVtZW50IiwieiIsInciLCJBIiwiQXJyYXkiLCJpc0FycmF5IiwieCIsIlAiLCJOIiwiTSIsImFwcGVuZENoaWxkIiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCIkIiwic2V0UHJvcGVydHkiLCJ0ZXN0IiwiSCIsInN0eWxlIiwiY3NzVGV4dCIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsInNsaWNlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIlQiLCJJIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImV2ZW50IiwiY29udGV4dFR5cGUiLCJ2YWx1ZSIsIl9fRSIsInByb3RvdHlwZSIsInJlbmRlciIsIk8iLCJzdWIiLCJzdGF0ZSIsIl9fcyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImZvckVhY2giLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2V0Q2hpbGRDb250ZXh0IiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJMIiwiZGlmZmVkIiwibG9jYWxOYW1lIiwibm9kZVR5cGUiLCJkb2N1bWVudCIsImNyZWF0ZVRleHROb2RlIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlRWxlbWVudCIsImlzIiwiY2hpbGROb2RlcyIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiYXR0cmlidXRlcyIsIm5hbWUiLCJfX2h0bWwiLCJpbm5lckhUTUwiLCJDIiwiY2hlY2tlZCIsInVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIlMiLCJmaXJzdENoaWxkIiwicSIsIkIiLCJEIiwiQ29uc3VtZXIiLCJQcm92aWRlciIsInNwbGljZSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInNldFN0YXRlIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJmb3JjZVVwZGF0ZSIsIlByb21pc2UiLCJ0aGVuIiwiYmluZCIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwiX19IIiwiRiIsInNoaWZ0IiwiY2xlYXJUaW1lb3V0IiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmaWx0ZXIiLCJfX3NvdXJjZSIsIl9fc2VsZiIsIm9wdGlvbnMiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInNldEF0dHJpYnV0ZXMiLCJpbnNlcnQiLCJkb21BUEkiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJhcGkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJnZXRUYXJnZXQiLCJFcnJvciIsImVsZW1lbnQiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsImFwcGx5IiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwic2V0RGF0YSIsImdldERhdGEiLCJrZXlzIiwiYnJvd3NlciIsInN0b3JhZ2UiLCJsb2NhbCIsImdldCIsInNldCIsIl9fcmVzdCIsImhhc093blByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJUb2dnbGVTd2l0Y2giLCJUZXh0SW5wdXQiLCJCdXR0b24iLCJBbGVydCIsImpzeF9ydW50aW1lXzEiLCJob29rc18xIiwidXRpbHNfMSIsIl9hIiwiY29sb3IiLCJoaWRkZW4iLCJpc0hpZGRlbiIsInNldElzSGlkZGVuIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJkZWJvdW5jZSIsImNhbGxiYWNrIiwianN4cyIsImFzc2lnbiIsImNsYXNzIiwicm9sZSIsImpzeCIsIm9uQ2xpY2siLCJvbklucHV0IiwiZGlzYWJsZWQiLCJvbkNoYW5nZSIsImlzT24iLCJGaWx0ZXIiLCJDb21wb25lbnRzXzEiLCJzZXRDdXJyZW50T24iLCJkYXR1bU9wZXJhdGlvbiIsImlzRWRpdCIsInNldElzRWRpdCIsInRleHQiLCJzZXRUZXh0IiwiaXNUb2dnbGFibGUiLCJzZXRJc1RvZ2dsYWJsZSIsImRhdHVtIiwiZnVuYyIsInRpbWVyIiwidGltZW91dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsImVudW1lcmFibGUiLCJwcm9wIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJwcmVhY3RfMSIsIkZpbHRlcl8xIiwiZGF0YUhhbmRsZXJfMSIsIm5ld0RhdHVtIiwicm93cyIsInNldFJvd3MiLCJjdXJyZW50T24iLCJhbGVydCIsInNldEFsZXJ0IiwidGFzayIsIm5ld1Jvd3MiLCJlcnJvciIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsInRhYnMiLCJxdWVyeSIsImN1cnJlbnRXaW5kb3ciLCJhY3RpdmUiLCJzZW5kTWVzc2FnZSIsImdldEVsZW1lbnRCeUlkIl0sInNvdXJjZVJvb3QiOiIifQ==