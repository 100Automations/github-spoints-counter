(()=>{"use strict";var n={699:(n,e,t)=>{t.d(e,{Z:()=>u});var o=t(537),r=t.n(o),_=t(645),i=t.n(_)()(r());i.push([n.id,"html,\r\nbody {\r\n  width: 350px;\r\n  min-height: 400px;\r\n}\r\n\r\n#popup > * {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.btn {\r\n  width: 100%;\r\n}\r\n","",{version:3,sources:["webpack://./src/popup/popup.css"],names:[],mappings:"AAAA;;EAEE,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb",sourcesContent:["html,\r\nbody {\r\n  width: 350px;\r\n  min-height: 400px;\r\n}\r\n\r\n#popup > * {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.btn {\r\n  width: 100%;\r\n}\r\n"],sourceRoot:""}]);const u=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,_){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var u=0;u<this.length;u++){var l=this[u][0];null!=l&&(i[l]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&i[s[0]]||(void 0!==_&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=_),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),_="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([_]).join("\n")}return[e].join("\n")}},400:(n,e,t)=>{t.r(e),t.d(e,{Component:()=>b,Fragment:()=>g,cloneElement:()=>R,createContext:()=>W,createElement:()=>v,createRef:()=>y,h:()=>v,hydrate:()=>N,isValidElement:()=>i,options:()=>r,render:()=>L,toChildArray:()=>j});var o,r,_,i,u,l,c,s,a={},f=[],p=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function d(n,e){for(var t in e)n[t]=e[t];return n}function h(n){var e=n.parentNode;e&&e.removeChild(n)}function v(n,e,t){var r,_,i,u={};for(i in e)"key"==i?r=e[i]:"ref"==i?_=e[i]:u[i]=e[i];if(arguments.length>2&&(u.children=arguments.length>3?o.call(arguments,2):t),"function"==typeof n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===u[i]&&(u[i]=n.defaultProps[i]);return m(n,u,r,_,null)}function m(n,e,t,o,i){var u={type:n,props:e,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==i?++_:i};return null==i&&null!=r.vnode&&r.vnode(u),u}function y(){return{current:null}}function g(n){return n.children}function b(n,e){this.props=n,this.context=e}function x(n,e){if(null==e)return n.__?x(n.__,n.__.__k.indexOf(n)+1):null;for(var t;e<n.__k.length;e++)if(null!=(t=n.__k[e])&&null!=t.__e)return t.__e;return"function"==typeof n.type?x(n):null}function k(n){var e,t;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,e=0;e<n.__k.length;e++)if(null!=(t=n.__k[e])&&null!=t.__e){n.__e=n.__c.base=t.__e;break}return k(n)}}function C(n){(!n.__d&&(n.__d=!0)&&u.push(n)&&!A.__r++||c!==r.debounceRendering)&&((c=r.debounceRendering)||l)(A)}function A(){for(var n;A.__r=u.length;)n=u.sort((function(n,e){return n.__v.__b-e.__v.__b})),u=[],n.some((function(n){var e,t,o,r,_,i;n.__d&&(_=(r=(e=n).__v).__e,(i=e.__P)&&(t=[],(o=d({},r)).__v=r.__v+1,M(i,r,o,e.__n,void 0!==i.ownerSVGElement,null!=r.__h?[_]:null,t,null==_?x(r):_,r.__h),I(t,r),r.__e!=_&&k(r)))}))}function S(n,e,t,o,r,_,i,u,l,c){var s,p,d,h,v,y,b,k=o&&o.__k||f,C=k.length;for(t.__k=[],s=0;s<e.length;s++)if(null!=(h=t.__k[s]=null==(h=e[s])||"boolean"==typeof h?null:"string"==typeof h||"number"==typeof h||"bigint"==typeof h?m(null,h,null,null,h):Array.isArray(h)?m(g,{children:h},null,null,null):h.__b>0?m(h.type,h.props,h.key,null,h.__v):h)){if(h.__=t,h.__b=t.__b+1,null===(d=k[s])||d&&h.key==d.key&&h.type===d.type)k[s]=void 0;else for(p=0;p<C;p++){if((d=k[p])&&h.key==d.key&&h.type===d.type){k[p]=void 0;break}d=null}M(n,h,d=d||a,r,_,i,u,l,c),v=h.__e,(p=h.ref)&&d.ref!=p&&(b||(b=[]),d.ref&&b.push(d.ref,null,h),b.push(p,h.__c||v,h)),null!=v?(null==y&&(y=v),"function"==typeof h.type&&h.__k===d.__k?h.__d=l=E(h,l,n):l=O(n,h,d,k,v,l),"function"==typeof t.type&&(t.__d=l)):l&&d.__e==l&&l.parentNode!=n&&(l=x(d))}for(t.__e=y,s=C;s--;)null!=k[s]&&("function"==typeof t.type&&null!=k[s].__e&&k[s].__e==t.__d&&(t.__d=x(o,s+1)),F(k[s],k[s]));if(b)for(s=0;s<b.length;s++)U(b[s],b[++s],b[++s])}function E(n,e,t){for(var o,r=n.__k,_=0;r&&_<r.length;_++)(o=r[_])&&(o.__=n,e="function"==typeof o.type?E(o,e,t):O(t,o,o,r,o.__e,e));return e}function j(n,e){return e=e||[],null==n||"boolean"==typeof n||(Array.isArray(n)?n.some((function(n){j(n,e)})):e.push(n)),e}function O(n,e,t,o,r,_){var i,u,l;if(void 0!==e.__d)i=e.__d,e.__d=void 0;else if(null==t||r!=_||null==r.parentNode)n:if(null==_||_.parentNode!==n)n.appendChild(r),i=null;else{for(u=_,l=0;(u=u.nextSibling)&&l<o.length;l+=2)if(u==r)break n;n.insertBefore(r,_),i=_}return void 0!==i?i:r.nextSibling}function w(n,e,t){"-"===e[0]?n.setProperty(e,t):n[e]=null==t?"":"number"!=typeof t||p.test(e)?t:t+"px"}function T(n,e,t,o,r){var _;n:if("style"===e)if("string"==typeof t)n.style.cssText=t;else{if("string"==typeof o&&(n.style.cssText=o=""),o)for(e in o)t&&e in t||w(n.style,e,"");if(t)for(e in t)o&&t[e]===o[e]||w(n.style,e,t[e])}else if("o"===e[0]&&"n"===e[1])_=e!==(e=e.replace(/Capture$/,"")),e=e.toLowerCase()in n?e.toLowerCase().slice(2):e.slice(2),n.l||(n.l={}),n.l[e+_]=t,t?o||n.addEventListener(e,_?H:P,_):n.removeEventListener(e,_?H:P,_);else if("dangerouslySetInnerHTML"!==e){if(r)e=e.replace(/xlink[H:h]/,"h").replace(/sName$/,"s");else if("href"!==e&&"list"!==e&&"form"!==e&&"tabIndex"!==e&&"download"!==e&&e in n)try{n[e]=null==t?"":t;break n}catch(n){}"function"==typeof t||(null!=t&&(!1!==t||"a"===e[0]&&"r"===e[1])?n.setAttribute(e,t):n.removeAttribute(e))}}function P(n){this.l[n.type+!1](r.event?r.event(n):n)}function H(n){this.l[n.type+!0](r.event?r.event(n):n)}function M(n,e,t,o,_,i,u,l,c){var s,a,f,p,h,v,m,y,x,k,C,A=e.type;if(void 0!==e.constructor)return null;null!=t.__h&&(c=t.__h,l=e.__e=t.__e,e.__h=null,i=[l]),(s=r.__b)&&s(e);try{n:if("function"==typeof A){if(y=e.props,x=(s=A.contextType)&&o[s.__c],k=s?x?x.props.value:s.__:o,t.__c?m=(a=e.__c=t.__c).__=a.__E:("prototype"in A&&A.prototype.render?e.__c=a=new A(y,k):(e.__c=a=new b(y,k),a.constructor=A,a.render=B),x&&x.sub(a),a.props=y,a.state||(a.state={}),a.context=k,a.__n=o,f=a.__d=!0,a.__h=[]),null==a.__s&&(a.__s=a.state),null!=A.getDerivedStateFromProps&&(a.__s==a.state&&(a.__s=d({},a.__s)),d(a.__s,A.getDerivedStateFromProps(y,a.__s))),p=a.props,h=a.state,f)null==A.getDerivedStateFromProps&&null!=a.componentWillMount&&a.componentWillMount(),null!=a.componentDidMount&&a.__h.push(a.componentDidMount);else{if(null==A.getDerivedStateFromProps&&y!==p&&null!=a.componentWillReceiveProps&&a.componentWillReceiveProps(y,k),!a.__e&&null!=a.shouldComponentUpdate&&!1===a.shouldComponentUpdate(y,a.__s,k)||e.__v===t.__v){a.props=y,a.state=a.__s,e.__v!==t.__v&&(a.__d=!1),a.__v=e,e.__e=t.__e,e.__k=t.__k,e.__k.forEach((function(n){n&&(n.__=e)})),a.__h.length&&u.push(a);break n}null!=a.componentWillUpdate&&a.componentWillUpdate(y,a.__s,k),null!=a.componentDidUpdate&&a.__h.push((function(){a.componentDidUpdate(p,h,v)}))}a.context=k,a.props=y,a.state=a.__s,(s=r.__r)&&s(e),a.__d=!1,a.__v=e,a.__P=n,s=a.render(a.props,a.state,a.context),a.state=a.__s,null!=a.getChildContext&&(o=d(d({},o),a.getChildContext())),f||null==a.getSnapshotBeforeUpdate||(v=a.getSnapshotBeforeUpdate(p,h)),C=null!=s&&s.type===g&&null==s.key?s.props.children:s,S(n,Array.isArray(C)?C:[C],e,t,o,_,i,u,l,c),a.base=e.__e,e.__h=null,a.__h.length&&u.push(a),m&&(a.__E=a.__=null),a.__e=!1}else null==i&&e.__v===t.__v?(e.__k=t.__k,e.__e=t.__e):e.__e=D(t.__e,e,t,o,_,i,u,c);(s=r.diffed)&&s(e)}catch(n){e.__v=null,(c||null!=i)&&(e.__e=l,e.__h=!!c,i[i.indexOf(l)]=null),r.__e(n,e,t)}}function I(n,e){r.__c&&r.__c(e,n),n.some((function(e){try{n=e.__h,e.__h=[],n.some((function(n){n.call(e)}))}catch(n){r.__e(n,e.__v)}}))}function D(n,e,t,r,_,i,u,l){var c,s,f,p=t.props,d=e.props,v=e.type,m=0;if("svg"===v&&(_=!0),null!=i)for(;m<i.length;m++)if((c=i[m])&&"setAttribute"in c==!!v&&(v?c.localName===v:3===c.nodeType)){n=c,i[m]=null;break}if(null==n){if(null===v)return document.createTextNode(d);n=_?document.createElementNS("http://www.w3.org/2000/svg",v):document.createElement(v,d.is&&d),i=null,l=!1}if(null===v)p===d||l&&n.data===d||(n.data=d);else{if(i=i&&o.call(n.childNodes),s=(p=t.props||a).dangerouslySetInnerHTML,f=d.dangerouslySetInnerHTML,!l){if(null!=i)for(p={},m=0;m<n.attributes.length;m++)p[n.attributes[m].name]=n.attributes[m].value;(f||s)&&(f&&(s&&f.__html==s.__html||f.__html===n.innerHTML)||(n.innerHTML=f&&f.__html||""))}if(function(n,e,t,o,r){var _;for(_ in t)"children"===_||"key"===_||_ in e||T(n,_,null,t[_],o);for(_ in e)r&&"function"!=typeof e[_]||"children"===_||"key"===_||"value"===_||"checked"===_||t[_]===e[_]||T(n,_,e[_],t[_],o)}(n,d,p,_,l),f)e.__k=[];else if(m=e.props.children,S(n,Array.isArray(m)?m:[m],e,t,r,_&&"foreignObject"!==v,i,u,i?i[0]:t.__k&&x(t,0),l),null!=i)for(m=i.length;m--;)null!=i[m]&&h(i[m]);l||("value"in d&&void 0!==(m=d.value)&&(m!==n.value||"progress"===v&&!m||"option"===v&&m!==p.value)&&T(n,"value",m,p.value,!1),"checked"in d&&void 0!==(m=d.checked)&&m!==n.checked&&T(n,"checked",m,p.checked,!1))}return n}function U(n,e,t){try{"function"==typeof n?n(e):n.current=e}catch(n){r.__e(n,t)}}function F(n,e,t){var o,_;if(r.unmount&&r.unmount(n),(o=n.ref)&&(o.current&&o.current!==n.__e||U(o,null,e)),null!=(o=n.__c)){if(o.componentWillUnmount)try{o.componentWillUnmount()}catch(n){r.__e(n,e)}o.base=o.__P=null}if(o=n.__k)for(_=0;_<o.length;_++)o[_]&&F(o[_],e,"function"!=typeof n.type);t||null==n.__e||h(n.__e),n.__e=n.__d=void 0}function B(n,e,t){return this.constructor(n,t)}function L(n,e,t){var _,i,u;r.__&&r.__(n,e),i=(_="function"==typeof t)?null:t&&t.__k||e.__k,u=[],M(e,n=(!_&&t||e).__k=v(g,null,[n]),i||a,a,void 0!==e.ownerSVGElement,!_&&t?[t]:i?null:e.firstChild?o.call(e.childNodes):null,u,!_&&t?t:i?i.__e:e.firstChild,_),I(u,n)}function N(n,e){L(n,e,N)}function R(n,e,t){var r,_,i,u=d({},n.props);for(i in e)"key"==i?r=e[i]:"ref"==i?_=e[i]:u[i]=e[i];return arguments.length>2&&(u.children=arguments.length>3?o.call(arguments,2):t),m(n.type,u,r||n.key,_||n.ref,null)}function W(n,e){var t={__c:e="__cC"+s++,__:n,Consumer:function(n,e){return n.children(e)},Provider:function(n){var t,o;return this.getChildContext||(t=[],(o={})[e]=this,this.getChildContext=function(){return o},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&t.some(C)},this.sub=function(n){t.push(n);var e=n.componentWillUnmount;n.componentWillUnmount=function(){t.splice(t.indexOf(n),1),e&&e.call(n)}}),n.children}};return t.Provider.__=t.Consumer.contextType=t}o=f.slice,r={__e:function(n,e){for(var t,o,r;e=e.__;)if((t=e.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n),r=t.__d),r)return t.__E=t}catch(e){n=e}throw n}},_=0,i=function(n){return null!=n&&void 0===n.constructor},b.prototype.setState=function(n,e){var t;t=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=d({},this.state),"function"==typeof n&&(n=n(d({},t),this.props)),n&&d(t,n),null!=n&&this.__v&&(e&&this.__h.push(e),C(this))},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),C(this))},b.prototype.render=g,u=[],l="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,A.__r=0,s=0},396:(n,e,t)=>{t.r(e),t.d(e,{useCallback:()=>k,useContext:()=>C,useDebugValue:()=>A,useEffect:()=>m,useErrorBoundary:()=>S,useImperativeHandle:()=>b,useLayoutEffect:()=>y,useMemo:()=>x,useReducer:()=>v,useRef:()=>g,useState:()=>h});var o,r,_,i=t(400),u=0,l=[],c=i.options.__b,s=i.options.__r,a=i.options.diffed,f=i.options.__c,p=i.options.unmount;function d(n,e){i.options.__h&&i.options.__h(r,n,u||e),u=0;var t=r.__H||(r.__H={__:[],__h:[]});return n>=t.__.length&&t.__.push({}),t.__[n]}function h(n){return u=1,v(P,n)}function v(n,e,t){var _=d(o++,2);return _.t=n,_.__c||(_.__=[t?t(e):P(void 0,e),function(n){var e=_.t(_.__[0],n);_.__[0]!==e&&(_.__=[e,_.__[1]],_.__c.setState({}))}],_.__c=r),_.__}function m(n,e){var t=d(o++,3);!i.options.__s&&T(t.__H,e)&&(t.__=n,t.__H=e,r.__H.__h.push(t))}function y(n,e){var t=d(o++,4);!i.options.__s&&T(t.__H,e)&&(t.__=n,t.__H=e,r.__h.push(t))}function g(n){return u=5,x((function(){return{current:n}}),[])}function b(n,e,t){u=6,y((function(){"function"==typeof n?n(e()):n&&(n.current=e())}),null==t?t:t.concat(n))}function x(n,e){var t=d(o++,7);return T(t.__H,e)&&(t.__=n(),t.__H=e,t.__h=n),t.__}function k(n,e){return u=8,x((function(){return n}),e)}function C(n){var e=r.context[n.__c],t=d(o++,9);return t.c=n,e?(null==t.__&&(t.__=!0,e.sub(r)),e.props.value):n.__}function A(n,e){i.options.useDebugValue&&i.options.useDebugValue(e?e(n):n)}function S(n){var e=d(o++,10),t=h();return e.__=n,r.componentDidCatch||(r.componentDidCatch=function(n){e.__&&e.__(n),t[1](n)}),[t[0],function(){t[1](void 0)}]}function E(){for(var n;n=l.shift();)if(n.__P)try{n.__H.__h.forEach(O),n.__H.__h.forEach(w),n.__H.__h=[]}catch(e){n.__H.__h=[],i.options.__e(e,n.__v)}}i.options.__b=function(n){r=null,c&&c(n)},i.options.__r=function(n){s&&s(n),o=0;var e=(r=n.__c).__H;e&&(e.__h.forEach(O),e.__h.forEach(w),e.__h=[])},i.options.diffed=function(n){a&&a(n);var e=n.__c;e&&e.__H&&e.__H.__h.length&&(1!==l.push(e)&&_===i.options.requestAnimationFrame||((_=i.options.requestAnimationFrame)||function(n){var e,t=function(){clearTimeout(o),j&&cancelAnimationFrame(e),setTimeout(n)},o=setTimeout(t,100);j&&(e=requestAnimationFrame(t))})(E)),r=null},i.options.__c=function(n,e){e.some((function(n){try{n.__h.forEach(O),n.__h=n.__h.filter((function(n){return!n.__||w(n)}))}catch(t){e.some((function(n){n.__h&&(n.__h=[])})),e=[],i.options.__e(t,n.__v)}})),f&&f(n,e)},i.options.unmount=function(n){p&&p(n);var e,t=n.__c;t&&t.__H&&(t.__H.__.forEach((function(n){try{O(n)}catch(n){e=n}})),e&&i.options.__e(e,t.__v))};var j="function"==typeof requestAnimationFrame;function O(n){var e=r,t=n.__c;"function"==typeof t&&(n.__c=void 0,t()),r=e}function w(n){var e=r;n.__c=n.__(),r=e}function T(n,e){return!n||n.length!==e.length||e.some((function(e,t){return e!==n[t]}))}function P(n,e){return"function"==typeof e?e(n):e}},584:(n,e,t)=>{t.r(e),t.d(e,{Fragment:()=>o.Fragment,jsx:()=>_,jsxDEV:()=>_,jsxs:()=>_});var o=t(400),r=0;function _(n,e,t,_,i){var u,l,c={};for(l in e)"ref"==l?u=e[l]:c[l]=e[l];var s={type:n,props:c,key:t,ref:u,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--r,__source:_,__self:i};if("function"==typeof n&&(u=n.defaultProps))for(l in u)void 0===c[l]&&(c[l]=u[l]);return o.options.vnode&&o.options.vnode(s),s}},823:(n,e,t)=>{t.r(e),t.d(e,{default:()=>m});var o=t(379),r=t.n(o),_=t(795),i=t.n(_),u=t(569),l=t.n(u),c=t(565),s=t.n(c),a=t(216),f=t.n(a),p=t(589),d=t.n(p),h=t(699),v={};v.styleTagTransform=d(),v.setAttributes=s(),v.insert=l().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=f(),r()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var _={},i=[],u=0;u<n.length;u++){var l=n[u],c=o.base?l[0]+o.base:l[0],s=_[c]||0,a="".concat(c," ").concat(s);_[c]=s+1;var f=t(a),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==f)e[f].references++,e[f].updater(p);else{var d=r(p,o);o.byIndex=u,e.splice(u,0,{identifier:a,updater:d,references:1})}i.push(a)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var _=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<_.length;i++){var u=t(_[i]);e[u].references--}for(var l=o(n,r),c=0;c<_.length;c++){var s=t(_[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}_=l}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var _=t.sourceMap;_&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(_))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},732:function(n,e,t){var o=this&&this.__rest||function(n,e){var t={};for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&e.indexOf(o)<0&&(t[o]=n[o]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(n);r<o.length;r++)e.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(n,o[r])&&(t[o[r]]=n[o[r]])}return t};Object.defineProperty(e,"__esModule",{value:!0}),e.ToggleSwitch=e.TextInput=e.Button=void 0;const r=t(584);e.Button=n=>{var{onClick:e}=n,t=o(n,["onClick"]);return(0,r.jsx)("button",Object.assign({class:"btn btn-primary btn-sm",type:"button",onClick:n=>{e(n)}},{children:t.children}))},e.TextInput=({onInput:n,value:e,disabled:t=!1})=>(0,r.jsx)("input",{class:"form-control",type:"text",value:e,onInput:e=>n(e),disabled:t}),e.ToggleSwitch=({onChange:n,isOn:e=!1})=>(0,r.jsx)("div",Object.assign({class:"form-check form-switch"},{children:(0,r.jsx)("input",{class:"form-check-input",type:"checkbox",checked:e,onChange:e=>n(e)})}))}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var _=e[o]={id:o,exports:{}};return n[o].call(_.exports,_,_.exports,t),_.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{const n=t(584),e=t(400),o=t(396);t(823);const r=t(732),_=({id:e,isOn:t,setCurrentOn:_,datum:i})=>{const[u,l]=(0,o.useState)(i.editState),[c,s]=(0,o.useState)(i.text);return(0,n.jsxs)("form",Object.assign({class:"row align-items-center"},{children:[(0,n.jsx)("div",Object.assign({class:"col-3"},{children:(0,n.jsx)(r.Button,Object.assign({onClick:function(){u?(_(e),i.text=c,l(!1)):l(!0)}},{children:u?"Submit":"Edit"}))})),(0,n.jsx)("div",Object.assign({class:"col-6"},{children:(0,n.jsx)(r.TextInput,{value:c,onInput:function(n){s(n.target.value)},disabled:!u})})),(0,n.jsx)("div",Object.assign({class:"col-3 d-flex justify-content-end"},{children:u?"":(0,n.jsx)(r.ToggleSwitch,{onChange:function(n){n.target.checked?_(e):_(null)},isOn:t})}))]}))};(0,e.render)((0,n.jsx)((()=>{const[e,t]=(0,o.useState)(null),[i,u]=(0,o.useState)([{text:"",editState:!0}]);return(0,o.useEffect)((()=>{console.log("hi")}),e),(0,n.jsxs)("div",Object.assign({id:"popup",class:"container p-3"},{children:[i.map(((o,r)=>(0,n.jsx)(_,{id:r,isOn:r==e,setCurrentOn:t,datum:o}))),(0,n.jsx)("div",{children:(0,n.jsx)(r.Button,Object.assign({onClick:function(){const n=[...i];n.push({text:"",editState:!0}),u(n)}},{children:"Add Filter"}))})]}))}),{}),document.getElementById("app"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,